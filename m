Return-Path: <linux-f2fs-devel-bounces@lists.sourceforge.net>
X-Original-To: lists+linux-f2fs-devel@lfdr.de
Delivered-To: lists+linux-f2fs-devel@lfdr.de
Received: from lists.sourceforge.net (lists.sourceforge.net [216.105.38.7])
	by mail.lfdr.de (Postfix) with ESMTPS id B266D378C41
	for <lists+linux-f2fs-devel@lfdr.de>; Mon, 10 May 2021 14:27:50 +0200 (CEST)
Received: from [127.0.0.1] (helo=sfs-ml-4.v29.lw.sourceforge.com)
	by sfs-ml-4.v29.lw.sourceforge.com with esmtp (Exim 4.90_1)
	(envelope-from <linux-f2fs-devel-bounces@lists.sourceforge.net>)
	id 1lg50i-00073A-Bn; Mon, 10 May 2021 12:27:44 +0000
Received: from [172.30.20.202] (helo=mx.sourceforge.net)
 by sfs-ml-4.v29.lw.sourceforge.com with esmtps
 (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256) (Exim 4.90_1)
 (envelope-from <mchehab+huawei@kernel.org>)
 id 1lg50d-000728-4H; Mon, 10 May 2021 12:27:39 +0000
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=sourceforge.net; s=x; h=Content-Transfer-Encoding:Content-Type:MIME-Version
 :References:In-Reply-To:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
 Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
 Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:List-Unsubscribe:
 List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=B99jhd6P2kLf7NphXIscfEAmIJxpPb418qfwRlqnGfQ=; b=GlPJRbA9KDIHcHv37UsRN/iXfc
 8NKum8McRxmdohNgcHFwxHWC9G/0nCq6dZ2aPaIPfjK6Eaf3Fe3Xc/VOxFIVASsWDUaYxkWOd/n4K
 O+HQr+KNKIbWuE6T69ROCTiANu896IhXFVQ1ouWqI+s8hlD8hHvyQvTzv2Jho4yvSiz8=;
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=sf.net; s=x
 ;
 h=Content-Transfer-Encoding:Content-Type:MIME-Version:References:
 In-Reply-To:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:Content-ID:
 Content-Description:Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc
 :Resent-Message-ID:List-Id:List-Help:List-Unsubscribe:List-Subscribe:
 List-Post:List-Owner:List-Archive;
 bh=B99jhd6P2kLf7NphXIscfEAmIJxpPb418qfwRlqnGfQ=; b=C7G952MFTJPPet6IcrO4eXyDK/
 gqRIeu6wZc3OqbPU23kVtygzLsCE/wlfbdPEdImxiU3r5Y+ulIOddqXJKlnxsL/ea8582r5eCJpXD
 XlxT74ZCC4kYS0xt868Y57WdKAn+vGVYrfKwOaVfJwboaygt7n6uxhfO62ZSrwu97dtU=;
Received: from mail.kernel.org ([198.145.29.99])
 by sfi-mx-1.v28.lw.sourceforge.com with esmtps
 (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256) (Exim 4.92.2)
 id 1lg50X-001hTp-Rz; Mon, 10 May 2021 12:27:39 +0000
Received: by mail.kernel.org (Postfix) with ESMTPSA id DA7D36101D;
 Mon, 10 May 2021 12:27:15 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1620649643;
 bh=LbmnOxpyt0WXqdMViFTAMoJEaPqlNEegibwGaPEZGG8=;
 h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
 b=MvIyYeVZJjyVYPo6ZRMXjb5Wtr+O8pSeu/Vqj2jEZnOpovUksVrQSoDjNHhf+GLkV
 4Xx0fmZ0I8V1A4Kb2+7hdIVjD7dyCDZ4X9WiEgLMaXkHT9nvdsdXD0qTASlyCtYXHQ
 +sba+YoRuzJSpeKSzMjmk9gfn+Npl0eiyN4rc0rwhqfC0EHszQ12OYVU7kieINgBKf
 7gbQpH2YQ/L3zo+vBbuAbSMpy+qiymgJnswcNNZB+ZL9u0csMThXFNu9JeGtygmfK/
 OJmXKy7SgKeZNkUPykTozc6JFS9iiGjJrQ1MKbH/YSYOaN3FnpGT6AlJS2F55XRmi4
 6g1zaYWjm1/jw==
Date: Mon, 10 May 2021 14:27:12 +0200
From: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
To: Thorsten Leemhuis <linux@leemhuis.info>
Message-ID: <20210510142712.02969f6d@coco.lan>
In-Reply-To: <20210510131950.063f0608@coco.lan>
References: <cover.1620641727.git.mchehab+huawei@kernel.org>
 <c4479ced-f4d8-1a1e-ee54-9abc55344187@leemhuis.info>
 <20210510131950.063f0608@coco.lan>
X-Mailer: Claws Mail 3.17.8 (GTK+ 2.24.33; x86_64-redhat-linux-gnu)
MIME-Version: 1.0
X-Spam-Score: -0.8 (/)
X-Spam-Report: Spam Filtering performed by mx.sourceforge.net.
 See http://spamassassin.org/tag/ for more details.
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.1 DKIM_VALID_AU Message has a valid DKIM or DK signature from author's
 domain
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature,
 not necessarily valid
 -0.7 DKIMWL_WL_HIGH         DKIMwl.org - High trust sender
X-Headers-End: 1lg50X-001hTp-Rz
Subject: Re: [f2fs-dev] [PATCH 00/53] Get rid of UTF-8 chars that can be
 mapped as ASCII
X-BeenThere: linux-f2fs-devel@lists.sourceforge.net
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <linux-f2fs-devel.lists.sourceforge.net>
List-Unsubscribe: <https://lists.sourceforge.net/lists/options/linux-f2fs-devel>, 
 <mailto:linux-f2fs-devel-request@lists.sourceforge.net?subject=unsubscribe>
List-Archive: <http://sourceforge.net/mailarchive/forum.php?forum_name=linux-f2fs-devel>
List-Post: <mailto:linux-f2fs-devel@lists.sourceforge.net>
List-Help: <mailto:linux-f2fs-devel-request@lists.sourceforge.net?subject=help>
List-Subscribe: <https://lists.sourceforge.net/lists/listinfo/linux-f2fs-devel>, 
 <mailto:linux-f2fs-devel-request@lists.sourceforge.net?subject=subscribe>
Cc: alsa-devel@alsa-project.org, kvm@vger.kernel.org,
 Linux Doc Mailing List <linux-doc@vger.kernel.org>, linux-iio@vger.kernel.org,
 linux-pci@vger.kernel.org, linux-fpga@vger.kernel.org,
 dri-devel@lists.freedesktop.org, keyrings@vger.kernel.org,
 linux-riscv@lists.infradead.org, Jonathan Corbet <corbet@lwn.net>,
 linux-rdma@vger.kernel.org, x86@kernel.org, linux-acpi@vger.kernel.org,
 intel-wired-lan@lists.osuosl.org, linux-input@vger.kernel.org,
 linux-ext4@vger.kernel.org, intel-gfx@lists.freedesktop.org,
 linux-media@vger.kernel.org, linux-pm@vger.kernel.org,
 linux-sgx@vger.kernel.org, coresight@lists.linaro.org, rcu@vger.kernel.org,
 mjpeg-users@lists.sourceforge.net, linux-arm-kernel@lists.infradead.org,
 linux-edac@vger.kernel.org, linux-hwmon@vger.kernel.org,
 netdev@vger.kernel.org, linux-usb@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-f2fs-devel@lists.sourceforge.net,
 linux-integrity@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-f2fs-devel-bounces@lists.sourceforge.net

RW0gTW9uLCAxMCBNYXkgMjAyMSAxMzoxOTo1MCArMDIwMApNYXVybyBDYXJ2YWxobyBDaGVoYWIg
PG1jaGVoYWIraHVhd2VpQGtlcm5lbC5vcmc+IGVzY3JldmV1OgoKPiBFbSBNb24sIDEwIE1heSAy
MDIxIDEyOjUyOjQ0ICswMjAwCj4gVGhvcnN0ZW4gTGVlbWh1aXMgPGxpbnV4QGxlZW1odWlzLmlu
Zm8+IGVzY3JldmV1Ogo+IAo+ID4gT24gMTAuMDUuMjEgMTI6MjYsIE1hdXJvIENhcnZhbGhvIENo
ZWhhYiB3cm90ZTogIAo+ID4gPgo+ID4gPiBBcyBMaW51eCBkZXZlbG9wZXJzIGFyZSBhbGwgYXJv
dW5kIHRoZSBnbG9iZSwgYW5kIG5vdCBldmVyeWJvZHkgaGFzIFVURi04Cj4gPiA+IGFzIHRoZWly
IGRlZmF1bHQgY2hhcnNldCwgYmV0dGVyIHRvIHVzZSBVVEYtOCBvbmx5IG9uIGNhc2VzIHdoZXJl
IGl0IGlzIHJlYWxseQo+ID4gPiBuZWVkZWQuCj4gPiA+IFvigKZdCj4gPiA+IFRoZSByZW1haW5p
bmcgcGF0Y2hlcyBvbiBzZXJpZXMgYWRkcmVzcyBzdWNoIGNhc2VzIG9uICoucnN0IGZpbGVzIGFu
ZCAKPiA+ID4gaW5zaWRlIHRoZSBEb2N1bWVudGF0aW9uL0FCSSwgdXNpbmcgdGhpcyBwZXJsIG1h
cCB0YWJsZSBpbiBvcmRlciB0byBkbyB0aGUKPiA+ID4gY2hhcnNldCBjb252ZXJzaW9uOgo+ID4g
PiAKPiA+ID4gbXkgJWNoYXJfbWFwID0gKAo+ID4gPiBb4oCmXQo+ID4gPiAJMHgyMDEzID0+ICct
JywJCSMgRU4gREFTSAo+ID4gPiAJMHgyMDE0ID0+ICctJywJCSMgRU0gREFTSCAgICAKPiAKPiAK
PiA+IEkgbWlnaHQgYmUgcGVyZm9ybWluZyBiaWtlIHNoZWRkaW5nIGhlcmUsIGJ1dCB3b3VsZG4n
dCBpdCBiZSBiZXR0ZXIgdG8KPiA+IHJlcGxhY2UgdGhvc2UgdHdvIHdpdGggIi0tIiwgYXMgZXhw
bGFpbmVkIGluCj4gPiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9EYXNoI0FwcHJveGlt
YXRpbmdfdGhlX2VtX2Rhc2hfd2l0aF90d29fb3JfdGhyZWVfaHlwaGVucwo+ID4gCj4gPiBGb3Ig
RU0gREFTSCB0aGVyZSBzZWVtcyB0byBiZSBldmVuICItLS0iLCBidXQgSSdkIHNheSB0aGF0IGlz
IGEgYml0IHRvbwo+ID4gbXVjaC4gIAo+IAo+IFllYWgsIHdlIGNhbiBkbywgaW5zdGVhZDoKPiAK
PiAgCTB4MjAxMyA9PiAnLS0nLAkJIyBFTiBEQVNICj4gIAkweDIwMTQgPT4gJy0tLScsCSMgRU0g
REFTSCAgCj4gCj4gSSB3YXMgYWN0dWFsbHkgaW4gZG91YnQgYWJvdXQgdGhvc2UgOy0pCgpPbiBh
IHF1aWNrIHRlc3QsIEkgY2hhbmdlZCBteSBzY3JpcHQgdG8gdXNlICItLSIgYW5kICItLS0iIGZv
cgpFTi9FTSBEQVNIIGNoYXJzLgoKVGhlIGRpZmYgYmVsb3cgaXMgYWdhaW5zdCBib3RoIHZlcnNp
b25zLgoKVGhlcmUgYXJlIGEgY291cGxlIG9mIHBsYWNlcyB3aGVyZSBpdCBnb3QgbWF0aGVtYXRp
Y2FsbHkgd3JvbmcsIApsaWtlIHRoaXMgb25lOgoKCS1vcGVyYXRpb24gb3ZlciBhIHRlbXBlcmF0
dXJlIHJhbmdlIG9mIC00MMKwQyB0byArMTI1wrBDLgoJK29wZXJhdGlvbiBvdmVyIGEgdGVtcGVy
YXR1cmUgcmFuZ2Ugb2YgLS00MMKwQyB0byArMTI1wrBDLgoKT24gb3RoZXJzLCBpdCBpcyBqdXN0
IGEgbWF0dGVyIG9mIHBlcnNvbmFsIHRhc3RlLiBNeSBwZXJzb25hbCBvcGluaW9uCmlzIHRoYXQs
IG9uIG1vc3QgY2FzZXMsIGEgc2luZ2xlICItIiB3b3VsZCBiZSBiZXR0ZXIuCgpUaGFua3MsCk1h
dXJvCgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9BQkkvdGVzdGluZy9zeXNmcy1jbGFzcy1u
ZXQtY2RjX25jbSBiL0RvY3VtZW50YXRpb24vQUJJL3Rlc3Rpbmcvc3lzZnMtY2xhc3MtbmV0LWNk
Y19uY20KaW5kZXggNDFhMWVlZjBkMGU3Li40NjkzMjUyNTU4ODcgMTAwNjQ0Ci0tLSBhL0RvY3Vt
ZW50YXRpb24vQUJJL3Rlc3Rpbmcvc3lzZnMtY2xhc3MtbmV0LWNkY19uY20KKysrIGIvRG9jdW1l
bnRhdGlvbi9BQkkvdGVzdGluZy9zeXNmcy1jbGFzcy1uZXQtY2RjX25jbQpAQCAtOTMsNyArOTMs
NyBAQCBDb250YWN0OglCasO4cm4gTW9yayA8Ympvcm5AbW9yay5ubz4KIERlc2NyaXB0aW9uOgog
CQktIEJpdCAwOiAxNi1iaXQgTlRCIHN1cHBvcnRlZCAoc2V0IHRvIDEpCiAJCS0gQml0IDE6IDMy
LWJpdCBOVEIgc3VwcG9ydGVkCi0JCS0gQml0cyAyIC0gMTU6IHJlc2VydmVkIChyZXNldCB0byB6
ZXJvOyBtdXN0IGJlIGlnbm9yZWQgYnkgaG9zdCkKKwkJLSBCaXRzIDIgLS0gMTU6IHJlc2VydmVk
IChyZXNldCB0byB6ZXJvOyBtdXN0IGJlIGlnbm9yZWQgYnkgaG9zdCkKIAogV2hhdDoJCS9zeXMv
Y2xhc3MvbmV0LzxpZmFjZT4vY2RjX25jbS9kd050YkluTWF4U2l6ZQogRGF0ZToJCU1heSAyMDE0
CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL1BDSS9hY3BpLWluZm8ucnN0IGIvRG9jdW1lbnRh
dGlvbi9QQ0kvYWNwaS1pbmZvLnJzdAppbmRleCA5YjRiMDQwMzk5ODIuLjdhNzVmMWY2ZTczYyAx
MDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9QQ0kvYWNwaS1pbmZvLnJzdAorKysgYi9Eb2N1bWVu
dGF0aW9uL1BDSS9hY3BpLWluZm8ucnN0CkBAIC0xNDAsOCArMTQwLDggQEAgYWRkcmVzcyBhbHdh
eXMgY29ycmVzcG9uZHMgdG8gYnVzIDAsIGV2ZW4gaWYgdGhlIGJ1cyByYW5nZSBiZWxvdyB0aGUg
YnJpZGdlCiAgICAgRXh0ZW5kZWQgQWRkcmVzcyBTcGFjZSBEZXNjcmlwdG9yICguNCkKICAgICAg
IEdlbmVyYWwgRmxhZ3M6IEJpdCBbMF0gQ29uc3VtZXIvUHJvZHVjZXI6CiAKLSAgICAgICAgKiAx
IC0gVGhpcyBkZXZpY2UgY29uc3VtZXMgdGhpcyByZXNvdXJjZQotICAgICAgICAqIDAgLSBUaGlz
IGRldmljZSBwcm9kdWNlcyBhbmQgY29uc3VtZXMgdGhpcyByZXNvdXJjZQorICAgICAgICAqIDEg
LS0gVGhpcyBkZXZpY2UgY29uc3VtZXMgdGhpcyByZXNvdXJjZQorICAgICAgICAqIDAgLS0gVGhp
cyBkZXZpY2UgcHJvZHVjZXMgYW5kIGNvbnN1bWVzIHRoaXMgcmVzb3VyY2UKIAogWzVdIEFDUEkg
Ni4yLCBzZWMgMTkuNi40MzoKICAgICBSZXNvdXJjZVVzYWdlIHNwZWNpZmllcyB3aGV0aGVyIHRo
ZSBNZW1vcnkgcmFuZ2UgaXMgY29uc3VtZWQgYnkKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24v
UkNVL0Rlc2lnbi9NZW1vcnktT3JkZXJpbmcvVHJlZS1SQ1UtTWVtb3J5LU9yZGVyaW5nLnJzdCBi
L0RvY3VtZW50YXRpb24vUkNVL0Rlc2lnbi9NZW1vcnktT3JkZXJpbmcvVHJlZS1SQ1UtTWVtb3J5
LU9yZGVyaW5nLnJzdAppbmRleCBkNzZjNmJmZGM2NTkuLjM0YTEyYjEyZGY1MSAxMDA2NDQKLS0t
IGEvRG9jdW1lbnRhdGlvbi9SQ1UvRGVzaWduL01lbW9yeS1PcmRlcmluZy9UcmVlLVJDVS1NZW1v
cnktT3JkZXJpbmcucnN0CisrKyBiL0RvY3VtZW50YXRpb24vUkNVL0Rlc2lnbi9NZW1vcnktT3Jk
ZXJpbmcvVHJlZS1SQ1UtTWVtb3J5LU9yZGVyaW5nLnJzdApAQCAtMjE1LDcgKzIxNSw3IEBAIG5l
d2x5IGFycml2ZWQgUkNVIGNhbGxiYWNrcyBhZ2FpbnN0IGZ1dHVyZSBncmFjZSBwZXJpb2RzOgog
ICAgNDMgfQogCiBCdXQgdGhlIG9ubHkgcGFydCBvZiBgYHJjdV9wcmVwYXJlX2Zvcl9pZGxlKClg
YCB0aGF0IHJlYWxseSBtYXR0ZXJzIGZvcgotdGhpcyBkaXNjdXNzaW9uIGFyZSBsaW5lcyAzNy0z
OS4gV2Ugd2lsbCB0aGVyZWZvcmUgYWJicmV2aWF0ZSB0aGlzCit0aGlzIGRpc2N1c3Npb24gYXJl
IGxpbmVzIDM3LS0zOS4gV2Ugd2lsbCB0aGVyZWZvcmUgYWJicmV2aWF0ZSB0aGlzCiBmdW5jdGlv
biBhcyBmb2xsb3dzOgogCiAuLiBrZXJuZWwtZmlndXJlOjogcmN1X25vZGUtbG9jay5zdmcKZGlm
ZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vUkNVL0Rlc2lnbi9SZXF1aXJlbWVudHMvUmVxdWlyZW1l
bnRzLnJzdCBiL0RvY3VtZW50YXRpb24vUkNVL0Rlc2lnbi9SZXF1aXJlbWVudHMvUmVxdWlyZW1l
bnRzLnJzdAppbmRleCBhMzQ5M2IzNGYzZGQuLmE0MmRjM2NmMjZiZCAxMDA2NDQKLS0tIGEvRG9j
dW1lbnRhdGlvbi9SQ1UvRGVzaWduL1JlcXVpcmVtZW50cy9SZXF1aXJlbWVudHMucnN0CisrKyBi
L0RvY3VtZW50YXRpb24vUkNVL0Rlc2lnbi9SZXF1aXJlbWVudHMvUmVxdWlyZW1lbnRzLnJzdApA
QCAtMjM1NCw4ICsyMzU0LDggQEAgd2hpY2ggaW4gcHJhY3RpY2UgYWxzbyBtZWFucyB0aGF0IFJD
VSBtdXN0IGhhdmUgYW4gYWdncmVzc2l2ZQogc3RyZXNzLXRlc3Qgc3VpdGUuIFRoaXMgc3RyZXNz
LXRlc3Qgc3VpdGUgaXMgY2FsbGVkIGBgcmN1dG9ydHVyZWBgLgogCiBBbHRob3VnaCB0aGUgbmVl
ZCBmb3IgYGByY3V0b3J0dXJlYGAgd2FzIG5vIHN1cnByaXNlLCB0aGUgY3VycmVudAotaW1tZW5z
ZSBwb3B1bGFyaXR5IG9mIHRoZSBMaW51eCBrZXJuZWwgaXMgcG9zaW5nIGludGVyZXN0aW5nLWFu
ZCBwZXJoYXBzCi11bnByZWNlZGVudGVkLXZhbGlkYXRpb24gY2hhbGxlbmdlcy4gVG8gc2VlIHRo
aXMsIGtlZXAgaW4gbWluZCB0aGF0CitpbW1lbnNlIHBvcHVsYXJpdHkgb2YgdGhlIExpbnV4IGtl
cm5lbCBpcyBwb3NpbmcgaW50ZXJlc3RpbmctLS1hbmQgcGVyaGFwcwordW5wcmVjZWRlbnRlZC0t
LXZhbGlkYXRpb24gY2hhbGxlbmdlcy4gVG8gc2VlIHRoaXMsIGtlZXAgaW4gbWluZCB0aGF0CiB0
aGVyZSBhcmUgd2VsbCBvdmVyIG9uZSBiaWxsaW9uIGluc3RhbmNlcyBvZiB0aGUgTGludXgga2Vy
bmVsIHJ1bm5pbmcKIHRvZGF5LCBnaXZlbiBBbmRyb2lkIHNtYXJ0cGhvbmVzLCBMaW51eC1wb3dl
cmVkIHRlbGV2aXNpb25zLCBhbmQKIHNlcnZlcnMuIFRoaXMgbnVtYmVyIGNhbiBiZSBleHBlY3Rl
ZCB0byBpbmNyZWFzZSBzaGFycGx5IHdpdGggdGhlIGFkdmVudApkaWZmIC0tZ2l0IGEvRG9jdW1l
bnRhdGlvbi9hZG1pbi1ndWlkZS9pbmRleC5yc3QgYi9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRl
L2luZGV4LnJzdAppbmRleCBiMTY5MjY0MzcxOGQuLjFhNmRiZGE3MWFkNiAxMDA2NDQKLS0tIGEv
RG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9pbmRleC5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi9h
ZG1pbi1ndWlkZS9pbmRleC5yc3QKQEAgLTMsNyArMyw3IEBAIFRoZSBMaW51eCBrZXJuZWwgdXNl
cidzIGFuZCBhZG1pbmlzdHJhdG9yJ3MgZ3VpZGUKIAogVGhlIGZvbGxvd2luZyBpcyBhIGNvbGxl
Y3Rpb24gb2YgdXNlci1vcmllbnRlZCBkb2N1bWVudHMgdGhhdCBoYXZlIGJlZW4KIGFkZGVkIHRv
IHRoZSBrZXJuZWwgb3ZlciB0aW1lLiAgVGhlcmUgaXMsIGFzIHlldCwgbGl0dGxlIG92ZXJhbGwg
b3JkZXIgb3IKLW9yZ2FuaXphdGlvbiBoZXJlIC0gdGhpcyBtYXRlcmlhbCB3YXMgbm90IHdyaXR0
ZW4gdG8gYmUgYSBzaW5nbGUsIGNvaGVyZW50Citvcmdhbml6YXRpb24gaGVyZSAtLS0gdGhpcyBt
YXRlcmlhbCB3YXMgbm90IHdyaXR0ZW4gdG8gYmUgYSBzaW5nbGUsIGNvaGVyZW50CiBkb2N1bWVu
dCEgIFdpdGggbHVjayB0aGluZ3Mgd2lsbCBpbXByb3ZlIHF1aWNrbHkgb3ZlciB0aW1lLgogCiBU
aGlzIGluaXRpYWwgc2VjdGlvbiBjb250YWlucyBvdmVyYWxsIGluZm9ybWF0aW9uLCBpbmNsdWRp
bmcgdGhlIFJFQURNRQpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9tb2R1
bGUtc2lnbmluZy5yc3QgYi9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRlL21vZHVsZS1zaWduaW5n
LnJzdAppbmRleCBiZDFkMmZlZjc4ZTguLjBkMTg1YmE4YjhiNSAxMDA2NDQKLS0tIGEvRG9jdW1l
bnRhdGlvbi9hZG1pbi1ndWlkZS9tb2R1bGUtc2lnbmluZy5yc3QKKysrIGIvRG9jdW1lbnRhdGlv
bi9hZG1pbi1ndWlkZS9tb2R1bGUtc2lnbmluZy5yc3QKQEAgLTEwMCw4ICsxMDAsOCBAQCBUaGlz
IGhhcyBhIG51bWJlciBvZiBvcHRpb25zIGF2YWlsYWJsZToKICAgICAgYGBjZXJ0cy9zaWduaW5n
X2tleS5wZW1gYCB3aWxsIGRpc2FibGUgdGhlIGF1dG9nZW5lcmF0aW9uIG9mIHNpZ25pbmcga2V5
cwogICAgICBhbmQgYWxsb3cgdGhlIGtlcm5lbCBtb2R1bGVzIHRvIGJlIHNpZ25lZCB3aXRoIGEg
a2V5IG9mIHlvdXIgY2hvb3NpbmcuCiAgICAgIFRoZSBzdHJpbmcgcHJvdmlkZWQgc2hvdWxkIGlk
ZW50aWZ5IGEgZmlsZSBjb250YWluaW5nIGJvdGggYSBwcml2YXRlIGtleQotICAgICBhbmQgaXRz
IGNvcnJlc3BvbmRpbmcgWC41MDkgY2VydGlmaWNhdGUgaW4gUEVNIGZvcm0sIG9yIC0gb24gc3lz
dGVtcyB3aGVyZQotICAgICB0aGUgT3BlblNTTCBFTkdJTkVfcGtjczExIGlzIGZ1bmN0aW9uYWwg
LSBhIFBLQ1MjMTEgVVJJIGFzIGRlZmluZWQgYnkKKyAgICAgYW5kIGl0cyBjb3JyZXNwb25kaW5n
IFguNTA5IGNlcnRpZmljYXRlIGluIFBFTSBmb3JtLCBvciAtLS0gb24gc3lzdGVtcyB3aGVyZQor
ICAgICB0aGUgT3BlblNTTCBFTkdJTkVfcGtjczExIGlzIGZ1bmN0aW9uYWwgLS0tIGEgUEtDUyMx
MSBVUkkgYXMgZGVmaW5lZCBieQogICAgICBSRkM3NTEyLiBJbiB0aGUgbGF0dGVyIGNhc2UsIHRo
ZSBQS0NTIzExIFVSSSBzaG91bGQgcmVmZXJlbmNlIGJvdGggYQogICAgICBjZXJ0aWZpY2F0ZSBh
bmQgYSBwcml2YXRlIGtleS4KIApkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlk
ZS9yYXMucnN0IGIvRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9yYXMucnN0CmluZGV4IDAwNDQ1
YWRmODcwOC4uNjZjMmM2MmMxY2Q0IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2FkbWluLWd1
aWRlL3Jhcy5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9yYXMucnN0CkBAIC00
MCwxMCArNDAsMTAgQEAgaXQgY2F1c2VzIGRhdGEgbG9zcyBvciBzeXN0ZW0gZG93bnRpbWUuCiAK
IEFtb25nIHRoZSBtb25pdG9yaW5nIG1lYXN1cmVzLCB0aGUgbW9zdCB1c3VhbCBvbmVzIGluY2x1
ZGU6CiAKLSogQ1BVIC0gZGV0ZWN0IGVycm9ycyBhdCBpbnN0cnVjdGlvbiBleGVjdXRpb24gYW5k
IGF0IEwxL0wyL0wzIGNhY2hlczsKLSogTWVtb3J5IC0gYWRkIGVycm9yIGNvcnJlY3Rpb24gbG9n
aWMgKEVDQykgdG8gZGV0ZWN0IGFuZCBjb3JyZWN0IGVycm9yczsKLSogSS9PIC0gYWRkIENSQyBj
aGVja3N1bXMgZm9yIHRyYW5zZmVycmVkIGRhdGE7Ci0qIFN0b3JhZ2UgLSBSQUlELCBqb3VybmFs
IGZpbGUgc3lzdGVtcywgY2hlY2tzdW1zLAorKiBDUFUgLS0gZGV0ZWN0IGVycm9ycyBhdCBpbnN0
cnVjdGlvbiBleGVjdXRpb24gYW5kIGF0IEwxL0wyL0wzIGNhY2hlczsKKyogTWVtb3J5IC0tIGFk
ZCBlcnJvciBjb3JyZWN0aW9uIGxvZ2ljIChFQ0MpIHRvIGRldGVjdCBhbmQgY29ycmVjdCBlcnJv
cnM7CisqIEkvTyAtLSBhZGQgQ1JDIGNoZWNrc3VtcyBmb3IgdHJhbnNmZXJyZWQgZGF0YTsKKyog
U3RvcmFnZSAtLSBSQUlELCBqb3VybmFsIGZpbGUgc3lzdGVtcywgY2hlY2tzdW1zLAogICBTZWxm
LU1vbml0b3JpbmcsIEFuYWx5c2lzIGFuZCBSZXBvcnRpbmcgVGVjaG5vbG9neSAoU01BUlQpLgog
CiBCeSBtb25pdG9yaW5nIHRoZSBudW1iZXIgb2Ygb2NjdXJyZW5jZXMgb2YgZXJyb3IgZGV0ZWN0
aW9ucywgaXQgaXMgcG9zc2libGUKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vYWRtaW4tZ3Vp
ZGUvcmVwb3J0aW5nLWlzc3Vlcy5yc3QgYi9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRlL3JlcG9y
dGluZy1pc3N1ZXMucnN0CmluZGV4IGY2OTE5MzBlMTNjMC4uYWY2OTkwMTVkMjY2IDEwMDY0NAot
LS0gYS9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRlL3JlcG9ydGluZy1pc3N1ZXMucnN0CisrKyBi
L0RvY3VtZW50YXRpb24vYWRtaW4tZ3VpZGUvcmVwb3J0aW5nLWlzc3Vlcy5yc3QKQEAgLTgyNCw3
ICs4MjQsNyBAQCBhbmQgbG9vayBhIGxpdHRsZSBsb3dlciBhdCB0aGUgdGFibGUuIEF0IGl0cyB0
b3AgeW91J2xsIHNlZSBhIGxpbmUgc3RhcnRpbmcgd2l0aAogbWFpbmxpbmUsIHdoaWNoIG1vc3Qg
b2YgdGhlIHRpbWUgd2lsbCBwb2ludCB0byBhIHByZS1yZWxlYXNlIHdpdGggYSB2ZXJzaW9uCiBu
dW1iZXIgbGlrZSAnNS44LXJjMicuIElmIHRoYXQncyB0aGUgY2FzZSwgeW91J2xsIHdhbnQgdG8g
dXNlIHRoaXMgbWFpbmxpbmUKIGtlcm5lbCBmb3IgdGVzdGluZywgYXMgdGhhdCB3aGVyZSBhbGwg
Zml4ZXMgaGF2ZSB0byBiZSBhcHBsaWVkIGZpcnN0LiBEbyBub3QgbGV0Ci10aGF0ICdyYycgc2Nh
cmUgeW91LCB0aGVzZSAnZGV2ZWxvcG1lbnQga2VybmVscycgYXJlIHByZXR0eSByZWxpYWJsZSAt
IGFuZCB5b3UKK3RoYXQgJ3JjJyBzY2FyZSB5b3UsIHRoZXNlICdkZXZlbG9wbWVudCBrZXJuZWxz
JyBhcmUgcHJldHR5IHJlbGlhYmxlIC0tLSBhbmQgeW91CiBtYWRlIGEgYmFja3VwLCBhcyB5b3Ug
d2VyZSBpbnN0cnVjdGVkIGFib3ZlLCBkaWRuJ3QgeW91PwogCiBJbiBhYm91dCB0d28gb3V0IG9m
IGV2ZXJ5IG5pbmUgdG8gdGVuIHdlZWtzLCBtYWlubGluZSBtaWdodCBwb2ludCB5b3UgdG8gYQpA
QCAtODY2LDcgKzg2Niw3IEBAIEhvdyB0byBvYnRhaW4gYSBmcmVzaCBMaW51eCBrZXJuZWwKIH5+
fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn4KIAogKipVc2luZyBhIHByZS1jb21waWxl
ZCBrZXJuZWwqKjogVGhpcyBpcyBvZnRlbiB0aGUgcXVpY2tlc3QsIGVhc2llc3QsIGFuZCBzYWZl
c3QKLXdheSBmb3IgdGVzdGluZyAtIGVzcGVjaWFsbHkgaXMgeW91IGFyZSB1bmZhbWlsaWFyIHdp
dGggdGhlIExpbnV4IGtlcm5lbC4gVGhlCit3YXkgZm9yIHRlc3RpbmcgLS0tIGVzcGVjaWFsbHkg
aXMgeW91IGFyZSB1bmZhbWlsaWFyIHdpdGggdGhlIExpbnV4IGtlcm5lbC4gVGhlCiBwcm9ibGVt
OiBtb3N0IG9mIHRob3NlIHNoaXBwZWQgYnkgZGlzdHJpYnV0b3JzIG9yIGFkZC1vbiByZXBvc2l0
b3JpZXMgYXJlIGJ1aWxkCiBmcm9tIG1vZGlmaWVkIExpbnV4IHNvdXJjZXMuIFRoZXkgYXJlIHRo
dXMgbm90IHZhbmlsbGEgYW5kIHRoZXJlZm9yZSBvZnRlbgogdW5zdWl0YWJsZSBmb3IgdGVzdGlu
ZyBhbmQgaXNzdWUgcmVwb3J0aW5nOiB0aGUgY2hhbmdlcyBtaWdodCBjYXVzZSB0aGUgaXNzdWUK
QEAgLTEzNDUsNyArMTM0NSw3IEBAIGFib3V0IGl0IHRvIGEgY2hhdHJvb20gb3IgZm9ydW0geW91
IG5vcm1hbGx5IGhhbmcgb3V0LgogCiAqKkJlIHBhdGllbnQqKjogSWYgeW91IGFyZSByZWFsbHkg
bHVja3kgeW91IG1pZ2h0IGdldCBhIHJlcGx5IHRvIHlvdXIgcmVwb3J0CiB3aXRoaW4gYSBmZXcg
aG91cnMuIEJ1dCBtb3N0IG9mIHRoZSB0aW1lIGl0IHdpbGwgdGFrZSBsb25nZXIsIGFzIG1haW50
YWluZXJzCi1hcmUgc2NhdHRlcmVkIGFyb3VuZCB0aGUgZ2xvYmUgYW5kIHRodXMgbWlnaHQgYmUg
aW4gYSBkaWZmZXJlbnQgdGltZSB6b25lIC0gb25lCithcmUgc2NhdHRlcmVkIGFyb3VuZCB0aGUg
Z2xvYmUgYW5kIHRodXMgbWlnaHQgYmUgaW4gYSBkaWZmZXJlbnQgdGltZSB6b25lIC0tIG9uZQog
d2hlcmUgdGhleSBhbHJlYWR5IGVuam95IHRoZWlyIG5pZ2h0IGF3YXkgZnJvbSBrZXlib2FyZC4K
IAogSW4gZ2VuZXJhbCwga2VybmVsIGRldmVsb3BlcnMgd2lsbCB0YWtlIG9uZSB0byBmaXZlIGJ1
c2luZXNzIGRheXMgdG8gcmVzcG9uZCB0bwpAQCAtMTM4OCw3ICsxMzg4LDcgQEAgSGVyZSBhcmUg
eW91ciBkdXRpZXMgaW4gY2FzZSB5b3UgZ290IHJlcGxpZXMgdG8geW91ciByZXBvcnQ6CiAKICoq
Q2hlY2sgd2hvIHlvdSBkZWFsIHdpdGgqKjogTW9zdCBvZiB0aGUgdGltZSBpdCB3aWxsIGJlIHRo
ZSBtYWludGFpbmVyIG9yIGEKIGRldmVsb3BlciBvZiB0aGUgcGFydGljdWxhciBjb2RlIGFyZWEg
dGhhdCB3aWxsIHJlc3BvbmQgdG8geW91ciByZXBvcnQuIEJ1dCBhcwotaXNzdWVzIGFyZSBub3Jt
YWxseSByZXBvcnRlZCBpbiBwdWJsaWMgaXQgY291bGQgYmUgYW55b25lIHRoYXQncyByZXBseWlu
ZyAtCitpc3N1ZXMgYXJlIG5vcm1hbGx5IHJlcG9ydGVkIGluIHB1YmxpYyBpdCBjb3VsZCBiZSBh
bnlvbmUgdGhhdCdzIHJlcGx5aW5nIC0tLQogaW5jbHVkaW5nIHBlb3BsZSB0aGF0IHdhbnQgdG8g
aGVscCwgYnV0IGluIHRoZSBlbmQgbWlnaHQgZ3VpZGUgeW91IHRvdGFsbHkgb2ZmCiB0cmFjayB3
aXRoIHRoZWlyIHF1ZXN0aW9ucyBvciByZXF1ZXN0cy4gVGhhdCByYXJlbHkgaGFwcGVucywgYnV0
IGl0J3Mgb25lIG9mCiBtYW55IHJlYXNvbnMgd2h5IGl0J3Mgd2lzZSB0byBxdWlja2x5IHJ1biBh
biBpbnRlcm5ldCBzZWFyY2ggdG8gc2VlIHdobyB5b3UncmUKQEAgLTE3MTYsNyArMTcxNiw3IEBA
IE1heWJlIHRoZWlyIHRlc3QgaGFyZHdhcmUgYnJva2UsIGdvdCByZXBsYWNlZCBieSBzb21ldGhp
bmcgbW9yZSBmYW5jeSwgb3IgaXMgc28KIG9sZCB0aGF0IGl0J3Mgc29tZXRoaW5nIHlvdSBkb24n
dCBmaW5kIG11Y2ggb3V0c2lkZSBvZiBjb21wdXRlciBtdXNldW1zCiBhbnltb3JlLiBTb21ldGlt
ZXMgZGV2ZWxvcGVyIHN0b3BzIGNhcmluZyBmb3IgdGhlaXIgY29kZSBhbmQgTGludXggYXQgYWxs
LCBhcwogc29tZXRoaW5nIGRpZmZlcmVudCBpbiB0aGVpciBsaWZlIGJlY2FtZSB3YXkgbW9yZSBp
bXBvcnRhbnQuIEluIHNvbWUgY2FzZXMKLW5vYm9keSBpcyB3aWxsaW5nIHRvIHRha2Ugb3ZlciB0
aGUgam9iIGFzIG1haW50YWluZXIgLSBhbmQgbm9ib2R5IGNhbiBiZSBmb3JjZWQKK25vYm9keSBp
cyB3aWxsaW5nIHRvIHRha2Ugb3ZlciB0aGUgam9iIGFzIG1haW50YWluZXIgLS0gYW5kIG5vYm9k
eSBjYW4gYmUgZm9yY2VkCiB0bywgYXMgY29udHJpYnV0aW5nIHRvIHRoZSBMaW51eCBrZXJuZWwg
aXMgZG9uZSBvbiBhIHZvbHVudGFyeSBiYXNpcy4gQWJhbmRvbmVkCiBkcml2ZXJzIG5ldmVydGhl
bGVzcyByZW1haW4gaW4gdGhlIGtlcm5lbDogdGhleSBhcmUgc3RpbGwgdXNlZnVsIGZvciBwZW9w
bGUgYW5kCiByZW1vdmluZyB3b3VsZCBiZSBhIHJlZ3Jlc3Npb24uCmRpZmYgLS1naXQgYS9Eb2N1
bWVudGF0aW9uL2FkbWluLWd1aWRlL3N5c2N0bC9rZXJuZWwucnN0IGIvRG9jdW1lbnRhdGlvbi9h
ZG1pbi1ndWlkZS9zeXNjdGwva2VybmVsLnJzdAppbmRleCA3NDNhN2M3MGZkODMuLjYzOWRkNTg1
MThjYSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9zeXNjdGwva2VybmVs
LnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRlL3N5c2N0bC9rZXJuZWwucnN0CkBA
IC0xMjg1LDcgKzEyODUsNyBAQCBUaGUgc29mdCBsb2NrdXAgZGV0ZWN0b3IgbW9uaXRvcnMgQ1BV
cyBmb3IgdGhyZWFkcyB0aGF0IGFyZSBob2dnaW5nIHRoZSBDUFVzCiB3aXRob3V0IHJlc2NoZWR1
bGluZyB2b2x1bnRhcmlseSwgYW5kIHRodXMgcHJldmVudCB0aGUgJ3dhdGNoZG9nL04nIHRocmVh
ZHMKIGZyb20gcnVubmluZy4gVGhlIG1lY2hhbmlzbSBkZXBlbmRzIG9uIHRoZSBDUFVzIGFiaWxp
dHkgdG8gcmVzcG9uZCB0byB0aW1lcgogaW50ZXJydXB0cyB3aGljaCBhcmUgbmVlZGVkIGZvciB0
aGUgJ3dhdGNoZG9nL04nIHRocmVhZHMgdG8gYmUgd29rZW4gdXAgYnkKLXRoZSB3YXRjaGRvZyB0
aW1lciBmdW5jdGlvbiwgb3RoZXJ3aXNlIHRoZSBOTUkgd2F0Y2hkb2cgLSBpZiBlbmFibGVkIC0g
Y2FuCit0aGUgd2F0Y2hkb2cgdGltZXIgZnVuY3Rpb24sIG90aGVyd2lzZSB0aGUgTk1JIHdhdGNo
ZG9nIC0tLSBpZiBlbmFibGVkIC0tLSBjYW4KIGRldGVjdCBhIGhhcmQgbG9ja3VwIGNvbmRpdGlv
bi4KIAogCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2Rldi10b29scy90ZXN0aW5nLW92ZXJ2
aWV3LnJzdCBiL0RvY3VtZW50YXRpb24vZGV2LXRvb2xzL3Rlc3Rpbmctb3ZlcnZpZXcucnN0Cmlu
ZGV4IDhhZGZmYzI2YTJlYy4uMzgxYzU3MWViNTJjIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9u
L2Rldi10b29scy90ZXN0aW5nLW92ZXJ2aWV3LnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2Rldi10
b29scy90ZXN0aW5nLW92ZXJ2aWV3LnJzdApAQCAtMTgsOCArMTgsOCBAQCBmcmFtZXdvcmtzLiBU
aGVzZSBib3RoIHByb3ZpZGUgaW5mcmFzdHJ1Y3R1cmUgdG8gaGVscCBtYWtlIHJ1bm5pbmcgdGVz
dHMgYW5kCiBncm91cHMgb2YgdGVzdHMgZWFzaWVyLCBhcyB3ZWxsIGFzIHByb3ZpZGluZyBoZWxw
ZXJzIHRvIGFpZCBpbiB3cml0aW5nIG5ldwogdGVzdHMuCiAKLUlmIHlvdSdyZSBsb29raW5nIHRv
IHZlcmlmeSB0aGUgYmVoYXZpb3VyIG9mIHRoZSBLZXJuZWwgLSBwYXJ0aWN1bGFybHkgc3BlY2lm
aWMKLXBhcnRzIG9mIHRoZSBrZXJuZWwgLSB0aGVuIHlvdSdsbCB3YW50IHRvIHVzZSBLVW5pdCBv
ciBrc2VsZnRlc3QuCitJZiB5b3UncmUgbG9va2luZyB0byB2ZXJpZnkgdGhlIGJlaGF2aW91ciBv
ZiB0aGUgS2VybmVsIC0tLSBwYXJ0aWN1bGFybHkgc3BlY2lmaWMKK3BhcnRzIG9mIHRoZSBrZXJu
ZWwgLS0tIHRoZW4geW91J2xsIHdhbnQgdG8gdXNlIEtVbml0IG9yIGtzZWxmdGVzdC4KIAogCiBU
aGUgRGlmZmVyZW5jZSBCZXR3ZWVuIEtVbml0IGFuZCBrc2VsZnRlc3QKZGlmZiAtLWdpdCBhL0Rv
Y3VtZW50YXRpb24vZG9jLWd1aWRlL2NvbnRyaWJ1dGluZy5yc3QgYi9Eb2N1bWVudGF0aW9uL2Rv
Yy1ndWlkZS9jb250cmlidXRpbmcucnN0CmluZGV4IGMyZDcwOTQ2N2M2OC4uYWM1YzlmMWQyMzEx
IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RvYy1ndWlkZS9jb250cmlidXRpbmcucnN0Cisr
KyBiL0RvY3VtZW50YXRpb24vZG9jLWd1aWRlL2NvbnRyaWJ1dGluZy5yc3QKQEAgLTc2LDcgKzc2
LDcgQEAgY29tbWVudHMgdGhhdCBsb29rIGxpa2UgdGhpczo6CiAKIFRoZSBwcm9ibGVtIGlzIHRo
ZSBtaXNzaW5nICIqIiwgd2hpY2ggY29uZnVzZXMgdGhlIGJ1aWxkIHN5c3RlbSdzCiBzaW1wbGlz
dGljIGlkZWEgb2Ygd2hhdCBDIGNvbW1lbnQgYmxvY2tzIGxvb2sgbGlrZS4gIFRoaXMgcHJvYmxl
bSBoYWQgYmVlbgotcHJlc2VudCBzaW5jZSB0aGF0IGNvbW1lbnQgd2FzIGFkZGVkIGluIDIwMTYg
LSBhIGZ1bGwgZm91ciB5ZWFycy4gIEZpeGluZworcHJlc2VudCBzaW5jZSB0aGF0IGNvbW1lbnQg
d2FzIGFkZGVkIGluIDIwMTYgLS0tIGEgZnVsbCBmb3VyIHllYXJzLiAgRml4aW5nCiBpdCB3YXMg
YSBtYXR0ZXIgb2YgYWRkaW5nIHRoZSBtaXNzaW5nIGFzdGVyaXNrcy4gIEEgcXVpY2sgbG9vayBh
dCB0aGUKIGhpc3RvcnkgZm9yIHRoYXQgZmlsZSBzaG93ZWQgd2hhdCB0aGUgbm9ybWFsIGZvcm1h
dCBmb3Igc3ViamVjdCBsaW5lcyBpcywKIGFuZCBgYHNjcmlwdHMvZ2V0X21haW50YWluZXIucGxg
YCB0b2xkIG1lIHdobyBzaG91bGQgcmVjZWl2ZSBpdC4gIFRoZQpkaWZmIC0tZ2l0IGEvRG9jdW1l
bnRhdGlvbi9kcml2ZXItYXBpL2ZwZ2EvZnBnYS1icmlkZ2UucnN0IGIvRG9jdW1lbnRhdGlvbi9k
cml2ZXItYXBpL2ZwZ2EvZnBnYS1icmlkZ2UucnN0CmluZGV4IDhkNjUwYjRlMmNlNi4uMWQ2ZTkx
MGMyN2RmIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvZnBnYS9mcGdhLWJy
aWRnZS5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2ZwZ2EvZnBnYS1icmlkZ2Uu
cnN0CkBAIC00LDExICs0LDExIEBAIEZQR0EgQnJpZGdlCiBBUEkgdG8gaW1wbGVtZW50IGEgbmV3
IEZQR0EgYnJpZGdlCiB+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+CiAKLSogc3Ry
dWN0IGZwZ2FfYnJpZGdlIC0gVGhlIEZQR0EgQnJpZGdlIHN0cnVjdHVyZQotKiBzdHJ1Y3QgZnBn
YV9icmlkZ2Vfb3BzIC0gTG93IGxldmVsIEJyaWRnZSBkcml2ZXIgb3BzCi0qIGRldm1fZnBnYV9i
cmlkZ2VfY3JlYXRlKCkgLSBBbGxvY2F0ZSBhbmQgaW5pdCBhIGJyaWRnZSBzdHJ1Y3QKLSogZnBn
YV9icmlkZ2VfcmVnaXN0ZXIoKSAtIFJlZ2lzdGVyIGEgYnJpZGdlCi0qIGZwZ2FfYnJpZGdlX3Vu
cmVnaXN0ZXIoKSAtIFVucmVnaXN0ZXIgYSBicmlkZ2UKKyogc3RydWN0IGZwZ2FfYnJpZGdlIC0t
LSBUaGUgRlBHQSBCcmlkZ2Ugc3RydWN0dXJlCisqIHN0cnVjdCBmcGdhX2JyaWRnZV9vcHMgLS0t
IExvdyBsZXZlbCBCcmlkZ2UgZHJpdmVyIG9wcworKiBkZXZtX2ZwZ2FfYnJpZGdlX2NyZWF0ZSgp
IC0tLSBBbGxvY2F0ZSBhbmQgaW5pdCBhIGJyaWRnZSBzdHJ1Y3QKKyogZnBnYV9icmlkZ2VfcmVn
aXN0ZXIoKSAtLS0gUmVnaXN0ZXIgYSBicmlkZ2UKKyogZnBnYV9icmlkZ2VfdW5yZWdpc3Rlcigp
IC0tLSBVbnJlZ2lzdGVyIGEgYnJpZGdlCiAKIC4uIGtlcm5lbC1kb2M6OiBpbmNsdWRlL2xpbnV4
L2ZwZ2EvZnBnYS1icmlkZ2UuaAogICAgOmZ1bmN0aW9uczogZnBnYV9icmlkZ2UKZGlmZiAtLWdp
dCBhL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS9mcGdhL2ZwZ2EtbWdyLnJzdCBiL0RvY3VtZW50
YXRpb24vZHJpdmVyLWFwaS9mcGdhL2ZwZ2EtbWdyLnJzdAppbmRleCA0ZDkyNmI0NTJjYjMuLjI3
MjE2MTM2MWM2YSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2ZwZ2EvZnBn
YS1tZ3IucnN0CisrKyBiL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS9mcGdhL2ZwZ2EtbWdyLnJz
dApAQCAtMTAxLDEyICsxMDEsMTIgQEAgaW4gc3RhdGUuCiBBUEkgZm9yIGltcGxlbWVudGluZyBh
IG5ldyBGUEdBIE1hbmFnZXIgZHJpdmVyCiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tCiAKLSogYGBmcGdhX21ncl9zdGF0ZXNgYCAtICBWYWx1ZXMgZm9yIDpj
OmV4cHI6YGZwZ2FfbWFuYWdlci0+c3RhdGVgLgotKiBzdHJ1Y3QgZnBnYV9tYW5hZ2VyIC0gIHRo
ZSBGUEdBIG1hbmFnZXIgc3RydWN0Ci0qIHN0cnVjdCBmcGdhX21hbmFnZXJfb3BzIC0gIExvdyBs
ZXZlbCBGUEdBIG1hbmFnZXIgZHJpdmVyIG9wcwotKiBkZXZtX2ZwZ2FfbWdyX2NyZWF0ZSgpIC0g
IEFsbG9jYXRlIGFuZCBpbml0IGEgbWFuYWdlciBzdHJ1Y3QKLSogZnBnYV9tZ3JfcmVnaXN0ZXIo
KSAtICBSZWdpc3RlciBhbiBGUEdBIG1hbmFnZXIKLSogZnBnYV9tZ3JfdW5yZWdpc3RlcigpIC0g
IFVucmVnaXN0ZXIgYW4gRlBHQSBtYW5hZ2VyCisqIGBgZnBnYV9tZ3Jfc3RhdGVzYGAgLS0tICBW
YWx1ZXMgZm9yIDpjOmV4cHI6YGZwZ2FfbWFuYWdlci0+c3RhdGVgLgorKiBzdHJ1Y3QgZnBnYV9t
YW5hZ2VyIC0tLSAgdGhlIEZQR0EgbWFuYWdlciBzdHJ1Y3QKKyogc3RydWN0IGZwZ2FfbWFuYWdl
cl9vcHMgLS0tICBMb3cgbGV2ZWwgRlBHQSBtYW5hZ2VyIGRyaXZlciBvcHMKKyogZGV2bV9mcGdh
X21ncl9jcmVhdGUoKSAtLS0gIEFsbG9jYXRlIGFuZCBpbml0IGEgbWFuYWdlciBzdHJ1Y3QKKyog
ZnBnYV9tZ3JfcmVnaXN0ZXIoKSAtLS0gIFJlZ2lzdGVyIGFuIEZQR0EgbWFuYWdlcgorKiBmcGdh
X21ncl91bnJlZ2lzdGVyKCkgLS0tICBVbnJlZ2lzdGVyIGFuIEZQR0EgbWFuYWdlcgogCiAuLiBr
ZXJuZWwtZG9jOjogaW5jbHVkZS9saW51eC9mcGdhL2ZwZ2EtbWdyLmgKICAgIDpmdW5jdGlvbnM6
IGZwZ2FfbWdyX3N0YXRlcwpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2Zw
Z2EvZnBnYS1wcm9ncmFtbWluZy5yc3QgYi9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvZnBnYS9m
cGdhLXByb2dyYW1taW5nLnJzdAppbmRleCBmYjRkYTQyNDBlOTYuLmFkYzcyNTg1NWJhZCAxMDA2
NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2ZwZ2EvZnBnYS1wcm9ncmFtbWluZy5y
c3QKKysrIGIvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2ZwZ2EvZnBnYS1wcm9ncmFtbWluZy5y
c3QKQEAgLTg0LDEwICs4NCwxMCBAQCB3aWxsIGdlbmVyYXRlIHRoYXQgbGlzdC4gIEhlcmUncyBz
b21lIHNhbXBsZSBjb2RlIG9mIHdoYXQgdG8gZG8gbmV4dDo6CiBBUEkgZm9yIHByb2dyYW1taW5n
IGFuIEZQR0EKIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogCi0qIGZwZ2FfcmVnaW9uX3By
b2dyYW1fZnBnYSgpIC0gIFByb2dyYW0gYW4gRlBHQQotKiBmcGdhX2ltYWdlX2luZm8oKSAtICBT
cGVjaWZpZXMgd2hhdCBGUEdBIGltYWdlIHRvIHByb2dyYW0KLSogZnBnYV9pbWFnZV9pbmZvX2Fs
bG9jKCkgLSAgQWxsb2NhdGUgYW4gRlBHQSBpbWFnZSBpbmZvIHN0cnVjdAotKiBmcGdhX2ltYWdl
X2luZm9fZnJlZSgpIC0gIEZyZWUgYW4gRlBHQSBpbWFnZSBpbmZvIHN0cnVjdAorKiBmcGdhX3Jl
Z2lvbl9wcm9ncmFtX2ZwZ2EoKSAtLS0gIFByb2dyYW0gYW4gRlBHQQorKiBmcGdhX2ltYWdlX2lu
Zm8oKSAtLS0gIFNwZWNpZmllcyB3aGF0IEZQR0EgaW1hZ2UgdG8gcHJvZ3JhbQorKiBmcGdhX2lt
YWdlX2luZm9fYWxsb2MoKSAtLS0gIEFsbG9jYXRlIGFuIEZQR0EgaW1hZ2UgaW5mbyBzdHJ1Y3QK
KyogZnBnYV9pbWFnZV9pbmZvX2ZyZWUoKSAtLS0gIEZyZWUgYW4gRlBHQSBpbWFnZSBpbmZvIHN0
cnVjdAogCiAuLiBrZXJuZWwtZG9jOjogZHJpdmVycy9mcGdhL2ZwZ2EtcmVnaW9uLmMKICAgIDpm
dW5jdGlvbnM6IGZwZ2FfcmVnaW9uX3Byb2dyYW1fZnBnYQpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRh
dGlvbi9kcml2ZXItYXBpL2ZwZ2EvZnBnYS1yZWdpb24ucnN0IGIvRG9jdW1lbnRhdGlvbi9kcml2
ZXItYXBpL2ZwZ2EvZnBnYS1yZWdpb24ucnN0CmluZGV4IDI2MzZhMjdjMTFiMi4uNmMwYzI1NDFk
ZTA0IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvZnBnYS9mcGdhLXJlZ2lv
bi5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2ZwZ2EvZnBnYS1yZWdpb24ucnN0
CkBAIC00NSwxOSArNDUsMTkgQEAgQW4gZXhhbXBsZSBvZiB1c2FnZSBjYW4gYmUgc2VlbiBpbiB0
aGUgcHJvYmUgZnVuY3Rpb24gb2YgWyNmMl1fLgogQVBJIHRvIGFkZCBhIG5ldyBGUEdBIHJlZ2lv
bgogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogCi0qIHN0cnVjdCBmcGdhX3JlZ2lvbiAt
IFRoZSBGUEdBIHJlZ2lvbiBzdHJ1Y3QKLSogZGV2bV9mcGdhX3JlZ2lvbl9jcmVhdGUoKSAtIEFs
bG9jYXRlIGFuZCBpbml0IGEgcmVnaW9uIHN0cnVjdAotKiBmcGdhX3JlZ2lvbl9yZWdpc3Rlcigp
IC0gIFJlZ2lzdGVyIGFuIEZQR0EgcmVnaW9uCi0qIGZwZ2FfcmVnaW9uX3VucmVnaXN0ZXIoKSAt
ICBVbnJlZ2lzdGVyIGFuIEZQR0EgcmVnaW9uCisqIHN0cnVjdCBmcGdhX3JlZ2lvbiAtLS0gVGhl
IEZQR0EgcmVnaW9uIHN0cnVjdAorKiBkZXZtX2ZwZ2FfcmVnaW9uX2NyZWF0ZSgpIC0tLSBBbGxv
Y2F0ZSBhbmQgaW5pdCBhIHJlZ2lvbiBzdHJ1Y3QKKyogZnBnYV9yZWdpb25fcmVnaXN0ZXIoKSAt
LS0gIFJlZ2lzdGVyIGFuIEZQR0EgcmVnaW9uCisqIGZwZ2FfcmVnaW9uX3VucmVnaXN0ZXIoKSAt
LS0gIFVucmVnaXN0ZXIgYW4gRlBHQSByZWdpb24KIAogVGhlIEZQR0EgcmVnaW9uJ3MgcHJvYmUg
ZnVuY3Rpb24gd2lsbCBuZWVkIHRvIGdldCBhIHJlZmVyZW5jZSB0byB0aGUgRlBHQQogTWFuYWdl
ciBpdCB3aWxsIGJlIHVzaW5nIHRvIGRvIHRoZSBwcm9ncmFtbWluZy4gIFRoaXMgdXN1YWxseSB3
b3VsZCBoYXBwZW4KIGR1cmluZyB0aGUgcmVnaW9uJ3MgcHJvYmUgZnVuY3Rpb24uCiAKLSogZnBn
YV9tZ3JfZ2V0KCkgLSBHZXQgYSByZWZlcmVuY2UgdG8gYW4gRlBHQSBtYW5hZ2VyLCByYWlzZSBy
ZWYgY291bnQKLSogb2ZfZnBnYV9tZ3JfZ2V0KCkgLSAgR2V0IGEgcmVmZXJlbmNlIHRvIGFuIEZQ
R0EgbWFuYWdlciwgcmFpc2UgcmVmIGNvdW50LAorKiBmcGdhX21ncl9nZXQoKSAtLS0gR2V0IGEg
cmVmZXJlbmNlIHRvIGFuIEZQR0EgbWFuYWdlciwgcmFpc2UgcmVmIGNvdW50CisqIG9mX2ZwZ2Ff
bWdyX2dldCgpIC0tLSAgR2V0IGEgcmVmZXJlbmNlIHRvIGFuIEZQR0EgbWFuYWdlciwgcmFpc2Ug
cmVmIGNvdW50LAogICBnaXZlbiBhIGRldmljZSBub2RlLgotKiBmcGdhX21ncl9wdXQoKSAtIFB1
dCBhbiBGUEdBIG1hbmFnZXIKKyogZnBnYV9tZ3JfcHV0KCkgLS0tIFB1dCBhbiBGUEdBIG1hbmFn
ZXIKIAogVGhlIEZQR0EgcmVnaW9uIHdpbGwgbmVlZCB0byBzcGVjaWZ5IHdoaWNoIGJyaWRnZXMg
dG8gY29udHJvbCB3aGlsZSBwcm9ncmFtbWluZwogdGhlIEZQR0EuICBUaGUgcmVnaW9uIGRyaXZl
ciBjYW4gYnVpbGQgYSBsaXN0IG9mIGJyaWRnZXMgZHVyaW5nIHByb2JlIHRpbWUKQEAgLTY2LDEx
ICs2NiwxMSBAQCB0aGUgbGlzdCBvZiBicmlkZ2VzIHRvIHByb2dyYW0ganVzdCBiZWZvcmUgcHJv
Z3JhbW1pbmcKICg6YzpleHByOmBmcGdhX3JlZ2lvbi0+Z2V0X2JyaWRnZXNgKS4gIFRoZSBGUEdB
IGJyaWRnZSBmcmFtZXdvcmsgc3VwcGxpZXMgdGhlCiBmb2xsb3dpbmcgQVBJcyB0byBoYW5kbGUg
YnVpbGRpbmcgb3IgdGVhcmluZyBkb3duIHRoYXQgbGlzdC4KIAotKiBmcGdhX2JyaWRnZV9nZXRf
dG9fbGlzdCgpIC0gR2V0IGEgcmVmIG9mIGFuIEZQR0EgYnJpZGdlLCBhZGQgaXQgdG8gYQorKiBm
cGdhX2JyaWRnZV9nZXRfdG9fbGlzdCgpIC0tLSBHZXQgYSByZWYgb2YgYW4gRlBHQSBicmlkZ2Us
IGFkZCBpdCB0byBhCiAgIGxpc3QKLSogb2ZfZnBnYV9icmlkZ2VfZ2V0X3RvX2xpc3QoKSAtIEdl
dCBhIHJlZiBvZiBhbiBGUEdBIGJyaWRnZSwgYWRkIGl0IHRvIGEKKyogb2ZfZnBnYV9icmlkZ2Vf
Z2V0X3RvX2xpc3QoKSAtLS0gR2V0IGEgcmVmIG9mIGFuIEZQR0EgYnJpZGdlLCBhZGQgaXQgdG8g
YQogICBsaXN0LCBnaXZlbiBhIGRldmljZSBub2RlCi0qIGZwZ2FfYnJpZGdlc19wdXQoKSAtIEdp
dmVuIGEgbGlzdCBvZiBicmlkZ2VzLCBwdXQgdGhlbQorKiBmcGdhX2JyaWRnZXNfcHV0KCkgLS0t
IEdpdmVuIGEgbGlzdCBvZiBicmlkZ2VzLCBwdXQgdGhlbQogCiAuLiBrZXJuZWwtZG9jOjogaW5j
bHVkZS9saW51eC9mcGdhL2ZwZ2EtcmVnaW9uLmgKICAgIDpmdW5jdGlvbnM6IGZwZ2FfcmVnaW9u
CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvaWlvL2J1ZmZlcnMucnN0IGIv
RG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2lpby9idWZmZXJzLnJzdAppbmRleCAyNDU2OWZmMGNm
NzkuLjkwNmRmYzEwYjdlZiAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2lp
by9idWZmZXJzLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvaWlvL2J1ZmZlcnMu
cnN0CkBAIC0yLDExICsyLDExIEBACiBCdWZmZXJzCiA9PT09PT09CiAKLSogc3RydWN0IGlpb19i
dWZmZXIgLSBnZW5lcmFsIGJ1ZmZlciBzdHJ1Y3R1cmUKLSogOmM6ZnVuYzpgaWlvX3ZhbGlkYXRl
X3NjYW5fbWFza19vbmVob3RgIC0gVmFsaWRhdGVzIHRoYXQgZXhhY3RseSBvbmUgY2hhbm5lbAor
KiBzdHJ1Y3QgaWlvX2J1ZmZlciAtLS0gZ2VuZXJhbCBidWZmZXIgc3RydWN0dXJlCisqIDpjOmZ1
bmM6YGlpb192YWxpZGF0ZV9zY2FuX21hc2tfb25laG90YCAtLS0gVmFsaWRhdGVzIHRoYXQgZXhh
Y3RseSBvbmUgY2hhbm5lbAogICBpcyBzZWxlY3RlZAotKiA6YzpmdW5jOmBpaW9fYnVmZmVyX2dl
dGAgLSBHcmFiIGEgcmVmZXJlbmNlIHRvIHRoZSBidWZmZXIKLSogOmM6ZnVuYzpgaWlvX2J1ZmZl
cl9wdXRgIC0gUmVsZWFzZSB0aGUgcmVmZXJlbmNlIHRvIHRoZSBidWZmZXIKKyogOmM6ZnVuYzpg
aWlvX2J1ZmZlcl9nZXRgIC0tLSBHcmFiIGEgcmVmZXJlbmNlIHRvIHRoZSBidWZmZXIKKyogOmM6
ZnVuYzpgaWlvX2J1ZmZlcl9wdXRgIC0tLSBSZWxlYXNlIHRoZSByZWZlcmVuY2UgdG8gdGhlIGJ1
ZmZlcgogCiBUaGUgSW5kdXN0cmlhbCBJL08gY29yZSBvZmZlcnMgYSB3YXkgZm9yIGNvbnRpbnVv
dXMgZGF0YSBjYXB0dXJlIGJhc2VkIG9uIGEKIHRyaWdnZXIgc291cmNlLiBNdWx0aXBsZSBkYXRh
IGNoYW5uZWxzIGNhbiBiZSByZWFkIGF0IG9uY2UgZnJvbQpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRh
dGlvbi9kcml2ZXItYXBpL2lpby9ody1jb25zdW1lci5yc3QgYi9Eb2N1bWVudGF0aW9uL2RyaXZl
ci1hcGkvaWlvL2h3LWNvbnN1bWVyLnJzdAppbmRleCA3NTk4NjM1OGZjMDIuLjA2OTY5ZmRlMjA4
NiAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2lpby9ody1jb25zdW1lci5y
c3QKKysrIGIvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2lpby9ody1jb25zdW1lci5yc3QKQEAg
LTgsMTEgKzgsMTEgQEAgc29mdHdhcmUgYnVmZmVyIGZvciBkYXRhLiBUaGUgaW1wbGVtZW50YXRp
b24gY2FuIGJlIGZvdW5kIHVuZGVyCiA6ZmlsZTpgZHJpdmVycy9paW8vYnVmZmVyL2h3LWNvbnN1
bWVyLmNgCiAKIAotKiBzdHJ1Y3QgaWlvX2h3X2NvbnN1bWVyIC0gSGFyZHdhcmUgY29uc3VtZXIg
c3RydWN0dXJlCi0qIDpjOmZ1bmM6YGlpb19od19jb25zdW1lcl9hbGxvY2AgLSBBbGxvY2F0ZSBJ
SU8gaGFyZHdhcmUgY29uc3VtZXIKLSogOmM6ZnVuYzpgaWlvX2h3X2NvbnN1bWVyX2ZyZWVgIC0g
RnJlZSBJSU8gaGFyZHdhcmUgY29uc3VtZXIKLSogOmM6ZnVuYzpgaWlvX2h3X2NvbnN1bWVyX2Vu
YWJsZWAgLSBFbmFibGUgSUlPIGhhcmR3YXJlIGNvbnN1bWVyCi0qIDpjOmZ1bmM6YGlpb19od19j
b25zdW1lcl9kaXNhYmxlYCAtIERpc2FibGUgSUlPIGhhcmR3YXJlIGNvbnN1bWVyCisqIHN0cnVj
dCBpaW9faHdfY29uc3VtZXIgLS0tIEhhcmR3YXJlIGNvbnN1bWVyIHN0cnVjdHVyZQorKiA6Yzpm
dW5jOmBpaW9faHdfY29uc3VtZXJfYWxsb2NgIC0tLSBBbGxvY2F0ZSBJSU8gaGFyZHdhcmUgY29u
c3VtZXIKKyogOmM6ZnVuYzpgaWlvX2h3X2NvbnN1bWVyX2ZyZWVgIC0tLSBGcmVlIElJTyBoYXJk
d2FyZSBjb25zdW1lcgorKiA6YzpmdW5jOmBpaW9faHdfY29uc3VtZXJfZW5hYmxlYCAtLS0gRW5h
YmxlIElJTyBoYXJkd2FyZSBjb25zdW1lcgorKiA6YzpmdW5jOmBpaW9faHdfY29uc3VtZXJfZGlz
YWJsZWAgLS0tIERpc2FibGUgSUlPIGhhcmR3YXJlIGNvbnN1bWVyCiAKIAogSFcgY29uc3VtZXIg
c2V0dXAKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS9paW8vdHJpZ2dlcmVk
LWJ1ZmZlcnMucnN0IGIvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2lpby90cmlnZ2VyZWQtYnVm
ZmVycy5yc3QKaW5kZXggN2MzN2IyYWZhMWFkLi40OTgzMWZmNDY2YzUgMTAwNjQ0Ci0tLSBhL0Rv
Y3VtZW50YXRpb24vZHJpdmVyLWFwaS9paW8vdHJpZ2dlcmVkLWJ1ZmZlcnMucnN0CisrKyBiL0Rv
Y3VtZW50YXRpb24vZHJpdmVyLWFwaS9paW8vdHJpZ2dlcmVkLWJ1ZmZlcnMucnN0CkBAIC03LDEw
ICs3LDEwIEBAIE5vdyB0aGF0IHdlIGtub3cgd2hhdCBidWZmZXJzIGFuZCB0cmlnZ2VycyBhcmUg
bGV0J3Mgc2VlIGhvdyB0aGV5IHdvcmsgdG9nZXRoZXIuCiBJSU8gdHJpZ2dlcmVkIGJ1ZmZlciBz
ZXR1cAogPT09PT09PT09PT09PT09PT09PT09PT09PT0KIAotKiA6YzpmdW5jOmBpaW9fdHJpZ2dl
cmVkX2J1ZmZlcl9zZXR1cGAgLSBTZXR1cCB0cmlnZ2VyZWQgYnVmZmVyIGFuZCBwb2xsZnVuYwot
KiA6YzpmdW5jOmBpaW9fdHJpZ2dlcmVkX2J1ZmZlcl9jbGVhbnVwYCAtIEZyZWUgcmVzb3VyY2Vz
IGFsbG9jYXRlZCBieQorKiA6YzpmdW5jOmBpaW9fdHJpZ2dlcmVkX2J1ZmZlcl9zZXR1cGAgLS0t
IFNldHVwIHRyaWdnZXJlZCBidWZmZXIgYW5kIHBvbGxmdW5jCisqIDpjOmZ1bmM6YGlpb190cmln
Z2VyZWRfYnVmZmVyX2NsZWFudXBgIC0tLSBGcmVlIHJlc291cmNlcyBhbGxvY2F0ZWQgYnkKICAg
OmM6ZnVuYzpgaWlvX3RyaWdnZXJlZF9idWZmZXJfc2V0dXBgCi0qIHN0cnVjdCBpaW9fYnVmZmVy
X3NldHVwX29wcyAtIGJ1ZmZlciBzZXR1cCByZWxhdGVkIGNhbGxiYWNrcworKiBzdHJ1Y3QgaWlv
X2J1ZmZlcl9zZXR1cF9vcHMgLS0tIGJ1ZmZlciBzZXR1cCByZWxhdGVkIGNhbGxiYWNrcwogCiBB
IHR5cGljYWwgdHJpZ2dlcmVkIGJ1ZmZlciBzZXR1cCBsb29rcyBsaWtlIHRoaXM6OgogCmRpZmYg
LS1naXQgYS9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvaWlvL3RyaWdnZXJzLnJzdCBiL0RvY3Vt
ZW50YXRpb24vZHJpdmVyLWFwaS9paW8vdHJpZ2dlcnMucnN0CmluZGV4IGE1ZDFmYzE1NzQ3Yy4u
NWIzZDQ3NWJjODcxIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvaWlvL3Ry
aWdnZXJzLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvaWlvL3RyaWdnZXJzLnJz
dApAQCAtMiwxMSArMiwxMSBAQAogVHJpZ2dlcnMKID09PT09PT09CiAKLSogc3RydWN0IGlpb190
cmlnZ2VyIC0gaW5kdXN0cmlhbCBJL08gdHJpZ2dlciBkZXZpY2UKLSogOmM6ZnVuYzpgZGV2bV9p
aW9fdHJpZ2dlcl9hbGxvY2AgLSBSZXNvdXJjZS1tYW5hZ2VkIGlpb190cmlnZ2VyX2FsbG9jCi0q
IDpjOmZ1bmM6YGRldm1faWlvX3RyaWdnZXJfcmVnaXN0ZXJgIC0gUmVzb3VyY2UtbWFuYWdlZCBp
aW9fdHJpZ2dlcl9yZWdpc3RlcgorKiBzdHJ1Y3QgaWlvX3RyaWdnZXIgLS0tIGluZHVzdHJpYWwg
SS9PIHRyaWdnZXIgZGV2aWNlCisqIDpjOmZ1bmM6YGRldm1faWlvX3RyaWdnZXJfYWxsb2NgIC0t
LSBSZXNvdXJjZS1tYW5hZ2VkIGlpb190cmlnZ2VyX2FsbG9jCisqIDpjOmZ1bmM6YGRldm1faWlv
X3RyaWdnZXJfcmVnaXN0ZXJgIC0tLSBSZXNvdXJjZS1tYW5hZ2VkIGlpb190cmlnZ2VyX3JlZ2lz
dGVyCiAgIGlpb190cmlnZ2VyX3VucmVnaXN0ZXIKLSogOmM6ZnVuYzpgaWlvX3RyaWdnZXJfdmFs
aWRhdGVfb3duX2RldmljZWAgLSBDaGVjayBpZiBhIHRyaWdnZXIgYW5kIElJTworKiA6YzpmdW5j
OmBpaW9fdHJpZ2dlcl92YWxpZGF0ZV9vd25fZGV2aWNlYCAtLS0gQ2hlY2sgaWYgYSB0cmlnZ2Vy
IGFuZCBJSU8KICAgZGV2aWNlIGJlbG9uZyB0byB0aGUgc2FtZSBkZXZpY2UKIAogSW4gbWFueSBz
aXR1YXRpb25zIGl0IGlzIHVzZWZ1bCBmb3IgYSBkcml2ZXIgdG8gYmUgYWJsZSB0byBjYXB0dXJl
IGRhdGEgYmFzZWQKQEAgLTYzLDcgKzYzLDcgQEAgTGV0J3Mgc2VlIGEgc2ltcGxlIGV4YW1wbGUg
b2YgaG93IHRvIHNldHVwIGEgdHJpZ2dlciB0byBiZSB1c2VkIGJ5IGEgZHJpdmVyOjoKIElJTyB0
cmlnZ2VyIG9wcwogPT09PT09PT09PT09PT09CiAKLSogc3RydWN0IGlpb190cmlnZ2VyX29wcyAt
IG9wZXJhdGlvbnMgc3RydWN0dXJlIGZvciBhbiBpaW9fdHJpZ2dlci4KKyogc3RydWN0IGlpb190
cmlnZ2VyX29wcyAtLS0gb3BlcmF0aW9ucyBzdHJ1Y3R1cmUgZm9yIGFuIGlpb190cmlnZ2VyLgog
CiBOb3RpY2UgdGhhdCBhIHRyaWdnZXIgaGFzIGEgc2V0IG9mIG9wZXJhdGlvbnMgYXR0YWNoZWQ6
CiAKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS9pbmRleC5yc3QgYi9Eb2N1
bWVudGF0aW9uL2RyaXZlci1hcGkvaW5kZXgucnN0CmluZGV4IDI5ZWI5MjMwYjdhOS4uZTA3ZTBk
MzljN2YwIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvaW5kZXgucnN0Cisr
KyBiL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS9pbmRleC5yc3QKQEAgLTQsNyArNCw3IEBAIFRo
ZSBMaW51eCBkcml2ZXIgaW1wbGVtZW50ZXIncyBBUEkgZ3VpZGUKIAogVGhlIGtlcm5lbCBvZmZl
cnMgYSB3aWRlIHZhcmlldHkgb2YgaW50ZXJmYWNlcyB0byBzdXBwb3J0IHRoZSBkZXZlbG9wbWVu
dAogb2YgZGV2aWNlIGRyaXZlcnMuICBUaGlzIGRvY3VtZW50IGlzIGFuIG9ubHkgc29tZXdoYXQg
b3JnYW5pemVkIGNvbGxlY3Rpb24KLW9mIHNvbWUgb2YgdGhvc2UgaW50ZXJmYWNlcyAtIGl0IHdp
bGwgaG9wZWZ1bGx5IGdldCBiZXR0ZXIgb3ZlciB0aW1lISAgVGhlCitvZiBzb21lIG9mIHRob3Nl
IGludGVyZmFjZXMgLS0tIGl0IHdpbGwgaG9wZWZ1bGx5IGdldCBiZXR0ZXIgb3ZlciB0aW1lISAg
VGhlCiBhdmFpbGFibGUgc3Vic2VjdGlvbnMgY2FuIGJlIHNlZW4gYmVsb3cuCiAKIC4uIGNsYXNz
OjogdG9jLXRpdGxlCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvbWVkaWEv
ZHJpdmVycy92aWR0di5yc3QgYi9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvbWVkaWEvZHJpdmVy
cy92aWR0di5yc3QKaW5kZXggYWJiNDU0MzAyYWM1Li5jMzgyMWQ4MmRmMTcgMTAwNjQ0Ci0tLSBh
L0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS9tZWRpYS9kcml2ZXJzL3ZpZHR2LnJzdAorKysgYi9E
b2N1bWVudGF0aW9uL2RyaXZlci1hcGkvbWVkaWEvZHJpdmVycy92aWR0di5yc3QKQEAgLTQ1OCw4
ICs0NTgsOCBAQCBBZGQgYSB3YXkgdG8gdGVzdCB2aWRlbwogCiBDdXJyZW50bHksIHZpZHR2IGNh
biBvbmx5IGVuY29kZSBQQ00gYXVkaW8uIEl0IHdvdWxkIGJlIGdyZWF0IHRvIGltcGxlbWVudAog
YSBiYXJlYm9uZXMgdmVyc2lvbiBvZiBNUEVHLTIgdmlkZW8gZW5jb2Rpbmcgc28gd2UgY2FuIGFs
c28gdGVzdCB2aWRlby4gVGhlCi1maXJzdCBwbGFjZSB0byBsb29rIGludG8gaXMgKklTTyAxMzgx
OC0yOiBJbmZvcm1hdGlvbiB0ZWNobm9sb2d5IC0gR2VuZXJpYwotY29kaW5nIG9mIG1vdmluZyBw
aWN0dXJlcyBhbmQgYXNzb2NpYXRlZCBhdWRpbyBpbmZvcm1hdGlvbiAtIFBhcnQgMjogVmlkZW8q
LAorZmlyc3QgcGxhY2UgdG8gbG9vayBpbnRvIGlzICpJU08gMTM4MTgtMjogSW5mb3JtYXRpb24g
dGVjaG5vbG9neSAtLS0gR2VuZXJpYworY29kaW5nIG9mIG1vdmluZyBwaWN0dXJlcyBhbmQgYXNz
b2NpYXRlZCBhdWRpbyBpbmZvcm1hdGlvbiAtLS0gUGFydCAyOiBWaWRlbyosCiB3aGljaCBjb3Zl
cnMgdGhlIGVuY29kaW5nIG9mIGNvbXByZXNzZWQgdmlkZW8gaW4gTVBFRyBUcmFuc3BvcnQgU3Ry
ZWFtcy4KIAogVGhpcyBtaWdodCBvcHRpb25hbGx5IHVzZSB0aGUgVmlkZW80TGludXgyIFRlc3Qg
UGF0dGVybiBHZW5lcmF0b3IsIHY0bDItdHBnLApkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9k
cml2ZXItYXBpL252ZGltbS9idHQucnN0IGIvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL252ZGlt
bS9idHQucnN0CmluZGV4IGRkOTFhNDk1ZTAyZS4uMWQyZDljZDQwZGVmIDEwMDY0NAotLS0gYS9E
b2N1bWVudGF0aW9uL2RyaXZlci1hcGkvbnZkaW1tL2J0dC5yc3QKKysrIGIvRG9jdW1lbnRhdGlv
bi9kcml2ZXItYXBpL252ZGltbS9idHQucnN0CkBAIC05MSw3ICs5MSw3IEBAIEJpdCAgICAgIERl
c2NyaXB0aW9uCiAJICAgMCAgMAkgIEluaXRpYWwgc3RhdGUuIFJlYWRzIHJldHVybiB6ZXJvZXM7
IFByZW1hcCA9IFBvc3RtYXAKIAkgICAwICAxCSAgWmVybyBzdGF0ZTogUmVhZHMgcmV0dXJuIHpl
cm9lcwogCSAgIDEgIDAJICBFcnJvciBzdGF0ZTogUmVhZHMgZmFpbDsgV3JpdGVzIGNsZWFyICdF
JyBiaXQKLQkgICAxICAxCSAgTm9ybWFsIEJsb2NrIC0gaGFzIHZhbGlkIHBvc3RtYXAKKwkgICAx
ICAxCSAgTm9ybWFsIEJsb2NrIC0tIGhhcyB2YWxpZCBwb3N0bWFwCiAJICAgPT0gPT0gID09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIAogMjkgLSAw
CSBNYXBwaW5ncyB0byBpbnRlcm5hbCAncG9zdG1hcCcgYmxvY2tzCmRpZmYgLS1naXQgYS9Eb2N1
bWVudGF0aW9uL2ZpbGVzeXN0ZW1zL2YyZnMucnN0IGIvRG9jdW1lbnRhdGlvbi9maWxlc3lzdGVt
cy9mMmZzLnJzdAppbmRleCAxOWQyY2Y0NzdmYzMuLjliMGU5YWJmOGY4OCAxMDA2NDQKLS0tIGEv
RG9jdW1lbnRhdGlvbi9maWxlc3lzdGVtcy9mMmZzLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2Zp
bGVzeXN0ZW1zL2YyZnMucnN0CkBAIC00Miw3ICs0Miw3IEBAIGFyZWFzIG9uIGRpc2sgZm9yIGZh
c3Qgd3JpdGluZywgd2UgZGl2aWRlICB0aGUgbG9nIGludG8gc2VnbWVudHMgYW5kIHVzZSBhCiBz
ZWdtZW50IGNsZWFuZXIgdG8gY29tcHJlc3MgdGhlIGxpdmUgaW5mb3JtYXRpb24gZnJvbSBoZWF2
aWx5IGZyYWdtZW50ZWQKIHNlZ21lbnRzLiIgZnJvbSBSb3NlbmJsdW0sIE0uIGFuZCBPdXN0ZXJo
b3V0LCBKLiBLLiwgMTk5MiwgIlRoZSBkZXNpZ24gYW5kCiBpbXBsZW1lbnRhdGlvbiBvZiBhIGxv
Zy1zdHJ1Y3R1cmVkIGZpbGUgc3lzdGVtIiwgQUNNIFRyYW5zLiBDb21wdXRlciBTeXN0ZW1zCi0x
MCwgMSwgMjYtNTIuCisxMCwgMSwgMjYtLTUyLgogCiBXYW5kZXJpbmcgVHJlZSBQcm9ibGVtCiAt
LS0tLS0tLS0tLS0tLS0tLS0tLS0tCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2h3bW9uL3Rt
cDEwMy5yc3QgYi9Eb2N1bWVudGF0aW9uL2h3bW9uL3RtcDEwMy5yc3QKaW5kZXggYjNlZjgxNDc1
Y2Y4Li4wNTEyODJiZDg4YjcgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vaHdtb24vdG1wMTAz
LnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2h3bW9uL3RtcDEwMy5yc3QKQEAgLTIxLDEwICsyMSwx
MCBAQCBEZXNjcmlwdGlvbgogVGhlIFRNUDEwMyBpcyBhIGRpZ2l0YWwgb3V0cHV0IHRlbXBlcmF0
dXJlIHNlbnNvciBpbiBhIGZvdXItYmFsbAogd2FmZXIgY2hpcC1zY2FsZSBwYWNrYWdlIChXQ1NQ
KS4gVGhlIFRNUDEwMyBpcyBjYXBhYmxlIG9mIHJlYWRpbmcKIHRlbXBlcmF0dXJlcyB0byBhIHJl
c29sdXRpb24gb2YgMcKwQy4gVGhlIFRNUDEwMyBpcyBzcGVjaWZpZWQgZm9yCi1vcGVyYXRpb24g
b3ZlciBhIHRlbXBlcmF0dXJlIHJhbmdlIG9mIC00MMKwQyB0byArMTI1wrBDLgorb3BlcmF0aW9u
IG92ZXIgYSB0ZW1wZXJhdHVyZSByYW5nZSBvZiAtLTQwwrBDIHRvICsxMjXCsEMuCiAKIFJlc29s
dXRpb246IDggQml0cwotQWNjdXJhY3k6IMKxMcKwQyBUeXAgKC0xMMKwQyB0byArMTAwwrBDKQor
QWNjdXJhY3k6IMKxMcKwQyBUeXAgKC0tMTDCsEMgdG8gKzEwMMKwQykKIAogVGhlIGRyaXZlciBw
cm92aWRlcyB0aGUgY29tbW9uIHN5c2ZzLWludGVyZmFjZSBmb3IgdGVtcGVyYXR1cmVzIChzZWUK
IERvY3VtZW50YXRpb24vaHdtb24vc3lzZnMtaW50ZXJmYWNlLnJzdCB1bmRlciBUZW1wZXJhdHVy
ZXMpLgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9pbmRleC5yc3QgYi9Eb2N1bWVudGF0aW9u
L2luZGV4LnJzdAppbmRleCAxMWNkODA2ZWEzYTQuLjdhZTg4YWE1N2Q5OCAxMDA2NDQKLS0tIGEv
RG9jdW1lbnRhdGlvbi9pbmRleC5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi9pbmRleC5yc3QKQEAg
LTMwLDcgKzMwLDcgQEAgdHJlZSwgYXMgd2VsbCBhcyBsaW5rcyB0byB0aGUgZnVsbCBsaWNlbnNl
IHRleHQuCiBVc2VyLW9yaWVudGVkIGRvY3VtZW50YXRpb24KIC0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLQogCi1UaGUgZm9sbG93aW5nIG1hbnVhbHMgYXJlIHdyaXR0ZW4gZm9yICp1c2Vycyog
b2YgdGhlIGtlcm5lbCAtIHRob3NlIHdobyBhcmUKK1RoZSBmb2xsb3dpbmcgbWFudWFscyBhcmUg
d3JpdHRlbiBmb3IgKnVzZXJzKiBvZiB0aGUga2VybmVsIC0tLSB0aG9zZSB3aG8gYXJlCiB0cnlp
bmcgdG8gZ2V0IGl0IHRvIHdvcmsgb3B0aW1hbGx5IG9uIGEgZ2l2ZW4gc3lzdGVtLgogCiAuLiB0
b2N0cmVlOjoKQEAgLTkwLDcgKzkwLDcgQEAgS2VybmVsIEFQSSBkb2N1bWVudGF0aW9uCiBUaGVz
ZSBib29rcyBnZXQgaW50byB0aGUgZGV0YWlscyBvZiBob3cgc3BlY2lmaWMga2VybmVsIHN1YnN5
c3RlbXMgd29yawogZnJvbSB0aGUgcG9pbnQgb2YgdmlldyBvZiBhIGtlcm5lbCBkZXZlbG9wZXIu
ICBNdWNoIG9mIHRoZSBpbmZvcm1hdGlvbiBoZXJlCiBpcyB0YWtlbiBkaXJlY3RseSBmcm9tIHRo
ZSBrZXJuZWwgc291cmNlLCB3aXRoIHN1cHBsZW1lbnRhbCBtYXRlcmlhbCBhZGRlZAotYXMgbmVl
ZGVkIChvciBhdCBsZWFzdCBhcyB3ZSBtYW5hZ2VkIHRvIGFkZCBpdCAtIHByb2JhYmx5ICpub3Qq
IGFsbCB0aGF0IGlzCithcyBuZWVkZWQgKG9yIGF0IGxlYXN0IGFzIHdlIG1hbmFnZWQgdG8gYWRk
IGl0IC0tLSBwcm9iYWJseSAqbm90KiBhbGwgdGhhdCBpcwogbmVlZGVkKS4KIAogLi4gdG9jdHJl
ZTo6CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2luZmluaWJhbmQvdGFnX21hdGNoaW5nLnJz
dCBiL0RvY3VtZW50YXRpb24vaW5maW5pYmFuZC90YWdfbWF0Y2hpbmcucnN0CmluZGV4IGI4OTUy
OGEzMWQxMC4uMmMyNmY3NmU0M2Y5IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2luZmluaWJh
bmQvdGFnX21hdGNoaW5nLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL2luZmluaWJhbmQvdGFnX21h
dGNoaW5nLnJzdApAQCAtOCw4ICs4LDggQEAgbWF0Y2ggdGhlIGZvbGxvd2luZyBzb3VyY2UgYW5k
IGRlc3RpbmF0aW9uIHBhcmFtZXRlcnM6CiAKICoJQ29tbXVuaWNhdG9yCiAqCVVzZXIgdGFnIC0g
d2lsZCBjYXJkIG1heSBiZSBzcGVjaWZpZWQgYnkgdGhlIHJlY2VpdmVyCi0qCVNvdXJjZSByYW5r
IC0gd2lsZCBjYXIgbWF5IGJlIHNwZWNpZmllZCBieSB0aGUgcmVjZWl2ZXIKLSoJRGVzdGluYXRp
b24gcmFuayAtIHdpbGQKKyoJU291cmNlIHJhbmsgLS0gd2lsZCBjYXIgbWF5IGJlIHNwZWNpZmll
ZCBieSB0aGUgcmVjZWl2ZXIKKyoJRGVzdGluYXRpb24gcmFuayAtLSB3aWxkCiAKIFRoZSBvcmRl
cmluZyBydWxlcyByZXF1aXJlIHRoYXQgd2hlbiBtb3JlIHRoYW4gb25lIHBhaXIgb2Ygc2VuZCBh
bmQgcmVjZWl2ZQogbWVzc2FnZSBlbnZlbG9wZXMgbWF5IG1hdGNoLCB0aGUgcGFpciB0aGF0IGlu
Y2x1ZGVzIHRoZSBlYXJsaWVzdCBwb3N0ZWQtc2VuZApkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlv
bi9uZXR3b3JraW5nL2RldmljZV9kcml2ZXJzL2V0aGVybmV0L2ludGVsL2k0MGUucnN0IGIvRG9j
dW1lbnRhdGlvbi9uZXR3b3JraW5nL2RldmljZV9kcml2ZXJzL2V0aGVybmV0L2ludGVsL2k0MGUu
cnN0CmluZGV4IDY0MDI0Yzc3YzljYS4uZTNlNTJiMGU2YjVlIDEwMDY0NAotLS0gYS9Eb2N1bWVu
dGF0aW9uL25ldHdvcmtpbmcvZGV2aWNlX2RyaXZlcnMvZXRoZXJuZXQvaW50ZWwvaTQwZS5yc3QK
KysrIGIvRG9jdW1lbnRhdGlvbi9uZXR3b3JraW5nL2RldmljZV9kcml2ZXJzL2V0aGVybmV0L2lu
dGVsL2k0MGUucnN0CkBAIC0xNzMsNyArMTczLDcgQEAgRGlyZWN0b3IgcnVsZSBpcyBhZGRlZCBm
cm9tIGV0aHRvb2wgKFNpZGViYW5kIGZpbHRlciksIEFUUiBpcyB0dXJuZWQgb2ZmIGJ5IHRoZQog
ZHJpdmVyLiBUbyByZS1lbmFibGUgQVRSLCB0aGUgc2lkZWJhbmQgY2FuIGJlIGRpc2FibGVkIHdp
dGggdGhlIGV0aHRvb2wgLUsKIG9wdGlvbi4gRm9yIGV4YW1wbGU6OgogCi0gIGV0aHRvb2wgLUsg
W2FkYXB0ZXJdIG50dXBsZSBbb2ZmfG9uXQorICBldGh0b29sIC0tSyBbYWRhcHRlcl0gbnR1cGxl
IFtvZmZ8b25dCiAKIElmIHNpZGViYW5kIGlzIHJlLWVuYWJsZWQgYWZ0ZXIgQVRSIGlzIHJlLWVu
YWJsZWQsIEFUUiByZW1haW5zIGVuYWJsZWQgdW50aWwgYQogVENQLUlQIGZsb3cgaXMgYWRkZWQu
IFdoZW4gYWxsIFRDUC1JUCBzaWRlYmFuZCBydWxlcyBhcmUgZGVsZXRlZCwgQVRSIGlzCkBAIC02
ODgsNyArNjg4LDcgQEAgc2hhcGVyIGJ3X3JsaW1pdDogZm9yIGVhY2ggdGMsIHNldHMgbWluaW11
bSBhbmQgbWF4aW11bSBiYW5kd2lkdGggcmF0ZXMuCiBUb3RhbHMgbXVzdCBiZSBlcXVhbCBvciBs
ZXNzIHRoYW4gcG9ydCBzcGVlZC4KIAogRm9yIGV4YW1wbGU6IG1pbl9yYXRlIDFHYml0IDNHYml0
OiBWZXJpZnkgYmFuZHdpZHRoIGxpbWl0IHVzaW5nIG5ldHdvcmsKLW1vbml0b3JpbmcgdG9vbHMg
c3VjaCBhcyBpZnN0YXQgb3Igc2FyIC1uIERFViBbaW50ZXJ2YWxdIFtudW1iZXIgb2Ygc2FtcGxl
c10KK21vbml0b3JpbmcgdG9vbHMgc3VjaCBhcyBpZnN0YXQgb3Igc2FyIC0tbiBERVYgW2ludGVy
dmFsXSBbbnVtYmVyIG9mIHNhbXBsZXNdCiAKIDIuIEVuYWJsZSBIVyBUQyBvZmZsb2FkIG9uIGlu
dGVyZmFjZTo6CiAKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vbmV0d29ya2luZy9kZXZpY2Vf
ZHJpdmVycy9ldGhlcm5ldC9pbnRlbC9pYXZmLnJzdCBiL0RvY3VtZW50YXRpb24vbmV0d29ya2lu
Zy9kZXZpY2VfZHJpdmVycy9ldGhlcm5ldC9pbnRlbC9pYXZmLnJzdAppbmRleCAyNWU5ODQ5NGIz
ODUuLjQ0ZDJmODU3MzhiMSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9uZXR3b3JraW5nL2Rl
dmljZV9kcml2ZXJzL2V0aGVybmV0L2ludGVsL2lhdmYucnN0CisrKyBiL0RvY3VtZW50YXRpb24v
bmV0d29ya2luZy9kZXZpY2VfZHJpdmVycy9ldGhlcm5ldC9pbnRlbC9pYXZmLnJzdApAQCAtMTc5
LDcgKzE3OSw3IEBAIHNoYXBlciBid19ybGltaXQ6IGZvciBlYWNoIHRjLCBzZXRzIG1pbmltdW0g
YW5kIG1heGltdW0gYmFuZHdpZHRoIHJhdGVzLgogVG90YWxzIG11c3QgYmUgZXF1YWwgb3IgbGVz
cyB0aGFuIHBvcnQgc3BlZWQuCiAKIEZvciBleGFtcGxlOiBtaW5fcmF0ZSAxR2JpdCAzR2JpdDog
VmVyaWZ5IGJhbmR3aWR0aCBsaW1pdCB1c2luZyBuZXR3b3JrCi1tb25pdG9yaW5nIHRvb2xzIHN1
Y2ggYXMgaWZzdGF0IG9yIHNhciAtbiBERVYgW2ludGVydmFsXSBbbnVtYmVyIG9mIHNhbXBsZXNd
Cittb25pdG9yaW5nIHRvb2xzIHN1Y2ggYXMgaWZzdGF0IG9yIHNhciAtLW4gREVWIFtpbnRlcnZh
bF0gW251bWJlciBvZiBzYW1wbGVzXQogCiBOT1RFOgogICBTZXR0aW5nIHVwIGNoYW5uZWxzIHZp
YSBldGh0b29sIChldGh0b29sIC1MKSBpcyBub3Qgc3VwcG9ydGVkIHdoZW4gdGhlCmRpZmYgLS1n
aXQgYS9Eb2N1bWVudGF0aW9uL3Jpc2N2L3ZtLWxheW91dC5yc3QgYi9Eb2N1bWVudGF0aW9uL3Jp
c2N2L3ZtLWxheW91dC5yc3QKaW5kZXggNTQ1ZjhhYjUxZjFhLi4wNTYxNWIzMDIxYmIgMTAwNjQ0
Ci0tLSBhL0RvY3VtZW50YXRpb24vcmlzY3Yvdm0tbGF5b3V0LnJzdAorKysgYi9Eb2N1bWVudGF0
aW9uL3Jpc2N2L3ZtLWxheW91dC5yc3QKQEAgLTIyLDcgKzIyLDcgQEAgUklTQy1WIExpbnV4IEtl
cm5lbCA2NGJpdAogPT09PT09PT09PT09PT09PT09PT09PT09PQogCiBUaGUgUklTQy1WIHByaXZp
bGVnZWQgYXJjaGl0ZWN0dXJlIGRvY3VtZW50IHN0YXRlcyB0aGF0IHRoZSA2NGJpdCBhZGRyZXNz
ZXMKLSJtdXN0IGhhdmUgYml0cyA2My00OCBhbGwgZXF1YWwgdG8gYml0IDQ3LCBvciBlbHNlIGEg
cGFnZS1mYXVsdCBleGNlcHRpb24gd2lsbAorIm11c3QgaGF2ZSBiaXRzIDYzLS00OCBhbGwgZXF1
YWwgdG8gYml0IDQ3LCBvciBlbHNlIGEgcGFnZS1mYXVsdCBleGNlcHRpb24gd2lsbAogb2NjdXIu
IjogdGhhdCBzcGxpdHMgdGhlIHZpcnR1YWwgYWRkcmVzcyBzcGFjZSBpbnRvIDIgaGFsdmVzIHNl
cGFyYXRlZCBieSBhIHZlcnkKIGJpZyBob2xlLCB0aGUgbG93ZXIgaGFsZiBpcyB3aGVyZSB0aGUg
dXNlcnNwYWNlIHJlc2lkZXMsIHRoZSB1cHBlciBoYWxmIGlzIHdoZXJlCiB0aGUgUklTQy1WIExp
bnV4IEtlcm5lbCByZXNpZGVzLgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9zY2hlZHVsZXIv
c2NoZWQtZGVhZGxpbmUucnN0IGIvRG9jdW1lbnRhdGlvbi9zY2hlZHVsZXIvc2NoZWQtZGVhZGxp
bmUucnN0CmluZGV4IDBmZjM1M2VjZjI0ZS4uYjI2MWVjMmFiMmVmIDEwMDY0NAotLS0gYS9Eb2N1
bWVudGF0aW9uL3NjaGVkdWxlci9zY2hlZC1kZWFkbGluZS5yc3QKKysrIGIvRG9jdW1lbnRhdGlv
bi9zY2hlZHVsZXIvc2NoZWQtZGVhZGxpbmUucnN0CkBAIC01MTUsNyArNTE1LDcgQEAgRGVhZGxp
bmUgVGFzayBTY2hlZHVsaW5nCiAgICAgICBwcCA3NjAtNzY4LCAyMDA1LgogICAxMCAtIEouIEdv
b3NzZW5zLCBTLiBGdW5rIGFuZCBTLiBCYXJ1YWgsIFByaW9yaXR5LURyaXZlbiBTY2hlZHVsaW5n
IG9mCiAgICAgICAgUGVyaW9kaWMgVGFzayBTeXN0ZW1zIG9uIE11bHRpcHJvY2Vzc29ycy4gUmVh
bC1UaW1lIFN5c3RlbXMgSm91cm5hbCwKLSAgICAgICB2b2wuIDI1LCBuby4gMi0zLCBwcC4gMTg3
LTIwNSwgMjAwMy4KKyAgICAgICB2b2wuIDI1LCBuby4gMi0tMywgcHAuIDE4Ny0tMjA1LCAyMDAz
LgogICAxMSAtIFIuIERhdmlzIGFuZCBBLiBCdXJucy4gQSBTdXJ2ZXkgb2YgSGFyZCBSZWFsLVRp
bWUgU2NoZWR1bGluZyBmb3IKICAgICAgICBNdWx0aXByb2Nlc3NvciBTeXN0ZW1zLiBBQ00gQ29t
cHV0aW5nIFN1cnZleXMsIHZvbC4gNDMsIG5vLiA0LCAyMDExLgogICAgICAgIGh0dHA6Ly93d3ct
dXNlcnMuY3MueW9yay5hYy51ay9+cm9iZGF2aXMvcGFwZXJzL01QU3VydmV5djUuMC5wZGYKZGlm
ZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vdXNlcnNwYWNlLWFwaS9tZWRpYS92NGwvYmlibGlvLnJz
dCBiL0RvY3VtZW50YXRpb24vdXNlcnNwYWNlLWFwaS9tZWRpYS92NGwvYmlibGlvLnJzdAppbmRl
eCA2ZTA3Yjc4YmQzOWQuLjdiOGU2NzM4ZmY5ZSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi91
c2Vyc3BhY2UtYXBpL21lZGlhL3Y0bC9iaWJsaW8ucnN0CisrKyBiL0RvY3VtZW50YXRpb24vdXNl
cnNwYWNlLWFwaS9tZWRpYS92NGwvYmlibGlvLnJzdApAQCAtNTEsNyArNTEsNyBAQCBJU08gMTM4
MTgtMQogPT09PT09PT09PT0KIAogCi06dGl0bGU6ICAgICBJVFUtVCBSZWMuIEguMjIyLjAgfCBJ
U08vSUVDIDEzODE4LTEgIkluZm9ybWF0aW9uIHRlY2hub2xvZ3kgLSBHZW5lcmljIGNvZGluZyBv
ZiBtb3ZpbmcgcGljdHVyZXMgYW5kIGFzc29jaWF0ZWQgYXVkaW8gaW5mb3JtYXRpb246IFN5c3Rl
bXMiCis6dGl0bGU6ICAgICBJVFUtVCBSZWMuIEguMjIyLjAgfCBJU08vSUVDIDEzODE4LTEgIklu
Zm9ybWF0aW9uIHRlY2hub2xvZ3kgLS0tIEdlbmVyaWMgY29kaW5nIG9mIG1vdmluZyBwaWN0dXJl
cyBhbmQgYXNzb2NpYXRlZCBhdWRpbyBpbmZvcm1hdGlvbjogU3lzdGVtcyIKIAogOmF1dGhvcjog
ICAgSW50ZXJuYXRpb25hbCBUZWxlY29tbXVuaWNhdGlvbiBVbmlvbiAoaHR0cDovL3d3dy5pdHUu
Y2gpLCBJbnRlcm5hdGlvbmFsIE9yZ2FuaXNhdGlvbiBmb3IgU3RhbmRhcmRpc2F0aW9uIChodHRw
Oi8vd3d3Lmlzby5jaCkKIApAQCAtNjEsNyArNjEsNyBAQCBJU08gMTM4MTgtMgogPT09PT09PT09
PT0KIAogCi06dGl0bGU6ICAgICBJVFUtVCBSZWMuIEguMjYyIHwgSVNPL0lFQyAxMzgxOC0yICJJ
bmZvcm1hdGlvbiB0ZWNobm9sb2d5IC0gR2VuZXJpYyBjb2Rpbmcgb2YgbW92aW5nIHBpY3R1cmVz
IGFuZCBhc3NvY2lhdGVkIGF1ZGlvIGluZm9ybWF0aW9uOiBWaWRlbyIKKzp0aXRsZTogICAgIElU
VS1UIFJlYy4gSC4yNjIgfCBJU08vSUVDIDEzODE4LTIgIkluZm9ybWF0aW9uIHRlY2hub2xvZ3kg
LS0tIEdlbmVyaWMgY29kaW5nIG9mIG1vdmluZyBwaWN0dXJlcyBhbmQgYXNzb2NpYXRlZCBhdWRp
byBpbmZvcm1hdGlvbjogVmlkZW8iCiAKIDphdXRob3I6ICAgIEludGVybmF0aW9uYWwgVGVsZWNv
bW11bmljYXRpb24gVW5pb24gKGh0dHA6Ly93d3cuaXR1LmNoKSwgSW50ZXJuYXRpb25hbCBPcmdh
bmlzYXRpb24gZm9yIFN0YW5kYXJkaXNhdGlvbiAoaHR0cDovL3d3dy5pc28uY2gpCiAKQEAgLTE1
MCw3ICsxNTAsNyBAQCBJVFUtVC44MQogPT09PT09PT0KIAogCi06dGl0bGU6ICAgICBJVFUtVCBS
ZWNvbW1lbmRhdGlvbiBULjgxICJJbmZvcm1hdGlvbiBUZWNobm9sb2d5IC0gRGlnaXRhbCBDb21w
cmVzc2lvbiBhbmQgQ29kaW5nIG9mIENvbnRpbm91cy1Ub25lIFN0aWxsIEltYWdlcyAtIFJlcXVp
cmVtZW50cyBhbmQgR3VpZGVsaW5lcyIKKzp0aXRsZTogICAgIElUVS1UIFJlY29tbWVuZGF0aW9u
IFQuODEgIkluZm9ybWF0aW9uIFRlY2hub2xvZ3kgLS0tIERpZ2l0YWwgQ29tcHJlc3Npb24gYW5k
IENvZGluZyBvZiBDb250aW5vdXMtVG9uZSBTdGlsbCBJbWFnZXMgLS0tIFJlcXVpcmVtZW50cyBh
bmQgR3VpZGVsaW5lcyIKIAogOmF1dGhvcjogICAgSW50ZXJuYXRpb25hbCBUZWxlY29tbXVuaWNh
dGlvbiBVbmlvbiAoaHR0cDovL3d3dy5pdHUuaW50KQogCkBAIC0zMTAsNyArMzEwLDcgQEAgSVNP
IDEyMjMyOjIwMDYKID09PT09PT09PT09PT09CiAKIAotOnRpdGxlOiAgICAgUGhvdG9ncmFwaHkg
LSBEaWdpdGFsIHN0aWxsIGNhbWVyYXMgLSBEZXRlcm1pbmF0aW9uIG9mIGV4cG9zdXJlIGluZGV4
LCBJU08gc3BlZWQgcmF0aW5ncywgc3RhbmRhcmQgb3V0cHV0IHNlbnNpdGl2aXR5LCBhbmQgcmVj
b21tZW5kZWQgZXhwb3N1cmUgaW5kZXgKKzp0aXRsZTogICAgIFBob3RvZ3JhcGh5IC0tLSBEaWdp
dGFsIHN0aWxsIGNhbWVyYXMgLS0tIERldGVybWluYXRpb24gb2YgZXhwb3N1cmUgaW5kZXgsIElT
TyBzcGVlZCByYXRpbmdzLCBzdGFuZGFyZCBvdXRwdXQgc2Vuc2l0aXZpdHksIGFuZCByZWNvbW1l
bmRlZCBleHBvc3VyZSBpbmRleAogCiA6YXV0aG9yOiAgICBJbnRlcm5hdGlvbmFsIE9yZ2FuaXph
dGlvbiBmb3IgU3RhbmRhcmRpemF0aW9uIChodHRwOi8vd3d3Lmlzby5vcmcpCiAKZGlmZiAtLWdp
dCBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0vcnVubmluZy1uZXN0ZWQtZ3Vlc3RzLnJzdCBiL0Rv
Y3VtZW50YXRpb24vdmlydC9rdm0vcnVubmluZy1uZXN0ZWQtZ3Vlc3RzLnJzdAppbmRleCBlOWRm
ZjNmZWEwNTUuLjhiODNiODY1NjBkYSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2
bS9ydW5uaW5nLW5lc3RlZC1ndWVzdHMucnN0CisrKyBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0v
cnVubmluZy1uZXN0ZWQtZ3Vlc3RzLnJzdApAQCAtMjYsMTIgKzI2LDEyIEBAIHRoaXMgZG9jdW1l
bnQgaXMgYnVpbHQgb24gdGhpcyBleGFtcGxlKTo6CiAKIFRlcm1pbm9sb2d5OgogCi0tIEwwIC0g
bGV2ZWwtMDsgdGhlIGJhcmUgbWV0YWwgaG9zdCwgcnVubmluZyBLVk0KKy0gTDAgLS0gbGV2ZWwt
MDsgdGhlIGJhcmUgbWV0YWwgaG9zdCwgcnVubmluZyBLVk0KIAotLSBMMSAtIGxldmVsLTEgZ3Vl
c3Q7IGEgVk0gcnVubmluZyBvbiBMMDsgYWxzbyBjYWxsZWQgdGhlICJndWVzdAorLSBMMSAtLSBs
ZXZlbC0xIGd1ZXN0OyBhIFZNIHJ1bm5pbmcgb24gTDA7IGFsc28gY2FsbGVkIHRoZSAiZ3Vlc3QK
ICAgaHlwZXJ2aXNvciIsIGFzIGl0IGl0c2VsZiBpcyBjYXBhYmxlIG9mIHJ1bm5pbmcgS1ZNLgog
Ci0tIEwyIC0gbGV2ZWwtMiBndWVzdDsgYSBWTSBydW5uaW5nIG9uIEwxLCB0aGlzIGlzIHRoZSAi
bmVzdGVkIGd1ZXN0IgorLSBMMiAtLSBsZXZlbC0yIGd1ZXN0OyBhIFZNIHJ1bm5pbmcgb24gTDEs
IHRoaXMgaXMgdGhlICJuZXN0ZWQgZ3Vlc3QiCiAKIC4uIG5vdGU6OiBUaGUgYWJvdmUgZGlhZ3Jh
bSBpcyBtb2RlbGxlZCBhZnRlciB0aGUgeDg2IGFyY2hpdGVjdHVyZTsKICAgICAgICAgICBzMzkw
eCwgcHBjNjQgYW5kIG90aGVyIGFyY2hpdGVjdHVyZXMgYXJlIGxpa2VseSB0byBoYXZlCkBAIC0z
OSw3ICszOSw3IEBAIFRlcm1pbm9sb2d5OgogCiAgICAgICAgICAgRm9yIGV4YW1wbGUsIHMzOTB4
IGFsd2F5cyBoYXMgYW4gTFBBUiAoTG9naWNhbFBBUnRpdGlvbikKICAgICAgICAgICBoeXBlcnZp
c29yIHJ1bm5pbmcgb24gYmFyZSBtZXRhbCwgYWRkaW5nIGFub3RoZXIgbGF5ZXIgYW5kCi0gICAg
ICAgICAgcmVzdWx0aW5nIGluIGF0IGxlYXN0IGZvdXIgbGV2ZWxzIGluIGEgbmVzdGVkIHNldHVw
IC0gTDAgKGJhcmUKKyAgICAgICAgICByZXN1bHRpbmcgaW4gYXQgbGVhc3QgZm91ciBsZXZlbHMg
aW4gYSBuZXN0ZWQgc2V0dXAgLS0tIEwwIChiYXJlCiAgICAgICAgICAgbWV0YWwsIHJ1bm5pbmcg
dGhlIExQQVIgaHlwZXJ2aXNvciksIEwxIChob3N0IGh5cGVydmlzb3IpLCBMMgogICAgICAgICAg
IChndWVzdCBoeXBlcnZpc29yKSwgTDMgKG5lc3RlZCBndWVzdCkuCiAKQEAgLTE2NywxMSArMTY3
LDExIEBAIEVuYWJsaW5nICJuZXN0ZWQiIChzMzkweCkKICAgICAkIG1vZHByb2JlIGt2bSBuZXN0
ZWQ9MQogCiAuLiBub3RlOjogT24gczM5MHgsIHRoZSBrZXJuZWwgcGFyYW1ldGVyIGBgaHBhZ2Vg
YCBpcyBtdXR1YWxseSBleGNsdXNpdmUKLSAgICAgICAgICB3aXRoIHRoZSBgYG5lc3RlZGBgIHBh
cmFtdGVyIC0gaS5lLiB0byBiZSBhYmxlIHRvIGVuYWJsZQorICAgICAgICAgIHdpdGggdGhlIGBg
bmVzdGVkYGAgcGFyYW10ZXIgLS0tIGkuZS4gdG8gYmUgYWJsZSB0byBlbmFibGUKICAgICAgICAg
ICBgYG5lc3RlZGBgLCB0aGUgYGBocGFnZWBgIHBhcmFtZXRlciAqbXVzdCogYmUgZGlzYWJsZWQu
CiAKIDIuIFRoZSBndWVzdCBoeXBlcnZpc29yIChMMSkgbXVzdCBiZSBwcm92aWRlZCB3aXRoIHRo
ZSBgYHNpZWBgIENQVQotICAgZmVhdHVyZSAtIHdpdGggUUVNVSwgdGhpcyBjYW4gYmUgZG9uZSBi
eSB1c2luZyAiaG9zdCBwYXNzdGhyb3VnaCIKKyAgIGZlYXR1cmUgLS0tIHdpdGggUUVNVSwgdGhp
cyBjYW4gYmUgZG9uZSBieSB1c2luZyAiaG9zdCBwYXNzdGhyb3VnaCIKICAgICh2aWEgdGhlIGNv
bW1hbmQtbGluZSBgYC1jcHUgaG9zdGBgKS4KIAogMy4gTm93IHRoZSBLVk0gbW9kdWxlIGNhbiBi
ZSBsb2FkZWQgaW4gdGhlIEwxIChndWVzdCBoeXBlcnZpc29yKTo6CgoKCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkxpbnV4LWYyZnMtZGV2ZWwgbWFpbGlu
ZyBsaXN0CkxpbnV4LWYyZnMtZGV2ZWxAbGlzdHMuc291cmNlZm9yZ2UubmV0Cmh0dHBzOi8vbGlz
dHMuc291cmNlZm9yZ2UubmV0L2xpc3RzL2xpc3RpbmZvL2xpbnV4LWYyZnMtZGV2ZWwK
